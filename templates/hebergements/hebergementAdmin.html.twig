{% extends "baseAdmin.html.twig" %}

{% block titre %} Gestion des Hébergements {% endblock %}

{% block content %}
    <link rel="stylesheet" href="{{ asset('css/hebergements/admin.css') }}"/>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-3d@0.8.1/dist/chartjs-chart-3d.min.js"></script>

    <div class="hebergements-container">
        <div class="header">
            <h1><i class="fas fa-hotel"></i> Gestion des Hébergements</h1>
        </div>

        <div class="hebergements-content">
            <!-- Navigation Tabs -->
            <div class="tabs-nav">
                <button class="tab-btn active" data-tab="hebergements">Hébergements</button>
                <button class="tab-btn" data-tab="stats">Statistiques</button>
            </div>

            <!-- Hébergements Tab -->
            <div id="hebergements" class="tab-pane active">
                <div class="table-header">
                    <div class="search-filter">
                        <div class="search-box">
                            <input type="text" id="hebergementSearch" placeholder="Rechercher des hébergements...">
                            <button class="search-btn"><i class="fas fa-search"></i></button>
                        </div>
                        <div class="filters">
                            <select id="typeFilter">
                                <option value="all">Tous les types</option>
                                <option value="Hôtel">Hôtel</option>
                                <option value="Appartement">Appartement</option>
                                <option value="Maison">Maison</option>
                                <option value="Auberge">Auberge</option>
                            </select>
                            <select id="villeFilter">
                                <option value="all">Toutes les villes</option>
                                {% for ville in villes %}
                                    <option value="{{ ville }}">{{ ville }}</option>
                                {% endfor %}
                            </select>
                            <select id="sortFilter">
                                <option value="nom">Nom</option>
                                <option value="note">Note</option>
                                <option value="chambres">Nb Chambres</option>
                            </select>
                        </div>
                    </div>

                </div>

                <div class="hebergements-list">
                    {% for hebergement in hebergements %}
                        <div class="hebergement-card"
                             data-type="{{ hebergement.typeHebergement }}"
                             data-ville="{{ hebergement.ville }}"
                             data-note="{{ hebergement.noteMoyenne }}"
                             data-chambres="{{ hebergement.nbChambres }}"
                             data-hebergement-id="{{ hebergement.id }}">
                            <div class="hebergement-image">
                                {% set hasImage = false %}
                                {% for chambre in hebergement.chambres %}
                                    {% if chambre.images|length > 0 and not hasImage %}
                                        {% set hasImage = true %}
                                        <img src="{{ asset(chambre.images[0].url_image) }}" alt="{{ hebergement.nom }}">
                                    {% endif %}
                                {% endfor %}
                                {% if not hasImage %}
                                    <div class="no-image">
                                        <i class="fas fa-image"></i>
                                    </div>
                                {% endif %}
                            </div>
                            <div class="hebergement-details">
                                <div class="hebergement-main-info">
                                    <h3>{{ hebergement.nom }}</h3>
                                    <div class="hebergement-meta">
                                        <span class="location">
                                            <i class="fas fa-map-marker-alt"></i> {{ hebergement.ville }}, {{ hebergement.pays }}
                                        </span>
                                        <span class="type">
                                            <i class="fas fa-home"></i> {{ hebergement.typeHebergement }}
                                        </span>
                                    </div>
                                </div>
                                <div class="hebergement-secondary-info">
                                    <div class="hebergement-rating">
                                        <span class="rating"><i class="fas fa-star"></i> {{ hebergement.noteMoyenne }}/5</span>
                                    </div>
                                    <div class="hebergement-chambres">
                                        <i class="fas fa-bed"></i> {{ hebergement.nbChambres }} chambres
                                    </div>
                                </div>
                            </div>
                            <div class="hebergement-actions">
                                <button class="action-btn view-btn" onclick="openHebergementModal({{ hebergement.id }})">
                                    <i class="fas fa-eye"></i>
                                </button>
                                
                            </div>
                        </div>
                    {% else %}
                        <div class="no-hebergements">
                            <i class="fas fa-info-circle"></i>
                            <p>Aucun hébergement trouvé</p>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Statistiques Tab -->
            <div id="stats" class="tab-pane">
                <div class="stats-grid">
                    <div class="stat-card">
                        <h3><i class="fas fa-map-marked-alt"></i> Top 10 Villes</h3>
                        <canvas id="villesChart"></canvas>
                    </div>

                    <div class="stat-card">
                        <h3><i class="fas fa-star"></i> Répartition des Notes</h3>
                        <canvas id="notesChart"></canvas>
                    </div>

                    <div class="stat-card">
                        <h3><i class="fas fa-home"></i> Types d'Hébergements</h3>
                        <canvas id="typesChart"></canvas>
                    </div>

                    <div class="stat-card">
                        <h3><i class="fas fa-bed"></i> Capacité des Chambres</h3>
                        <canvas id="capaciteChart"></canvas>
                    </div>

                    <div class="stat-card">
                        <h3><></i> Prix par Type</h3>
                        <canvas id="prixChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hébergement Details Modal -->
    <div id="hebergementModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal()">×</span>
            <h2>Détails de l'Hébergement</h2>
            <div class="modal-body">
                <!-- Le contenu sera rempli par JavaScript -->
            </div>
        </div>
    </div>

    <script>
        // Store hebergements data for JavaScript access
        const hebergementsData = [
            {% for hebergement in hebergements %}
            {
                id: {{ hebergement.id }},
                nom: "{{ hebergement.nom }}",
                description: "{{ hebergement.description|escape('js') }}",
                adresse: "{{ hebergement.adresse }}",
                ville: "{{ hebergement.ville }}",
                pays: "{{ hebergement.pays }}",
                note_moyenne: {{ hebergement.noteMoyenne }},
                services: "{{ hebergement.services|escape('js') }}",
                politique_annulation: "{{ hebergement.politiqueAnnulation|escape('js') }}",
                contact: "{{ hebergement.contact }}",
                type_hebergement: "{{ hebergement.typeHebergement }}",
                nb_chambres: {{ hebergement.nbChambres }},
                chambres: [
                    {% for chambre in hebergement.chambres %}
                    {
                        id: {{ chambre.id }},
                        numero: "{{ chambre.numero }}",
                        disponibilite: {{ chambre.disponibilite ? 'true' : 'false' }},
                        prix: {{ chambre.prix|default(0) }},
                        description: "{{ chambre.description|default('')|escape('js') }}",
                        capacite: {{ chambre.capacite|default(0) }},
                        equipements: "{{ chambre.equipements|default('')|escape('js') }}",
                        vue: "{{ chambre.vue|default('') }}",
                        taille: {{ chambre.taille|default(0) }},
                        images: [
                            {% for image in chambre.images %}
                            "{{ asset(image.url_image) }}",
                            {% endfor %}
                        ]
                    },
                    {% endfor %}
                ]
            },
            {% endfor %}
        ];

        const statsData = {{ stats|json_encode|raw }};

        // Flag to prevent chart re-initialization
        let chartsInitialized = false;

        // Tab functionality
        document.addEventListener('DOMContentLoaded', function() {
            const tabBtns = document.querySelectorAll('.tab-btn');
            const tabPanes = document.querySelectorAll('.tab-pane');

            // Ensure only the active tab is visible on load
            tabPanes.forEach(pane => {
                pane.style.display = pane.classList.contains('active') ? 'block' : 'none';
            });

            tabBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const tabId = this.getAttribute('data-tab');

                    // Remove active class from all buttons and hide all panes
                    tabBtns.forEach(b => b.classList.remove('active'));
                    tabPanes.forEach(pane => pane.style.display = 'none');

                    // Add active class to clicked button and show corresponding pane
                    this.classList.add('active');
                    document.getElementById(tabId).style.display = 'block';

                    // Initialize charts only when the stats tab is clicked
                    if (tabId === 'stats' && !chartsInitialized) {
                        initializeCharts();
                    }
                });
            });

            // Add event listeners for filters
            document.getElementById('hebergementSearch').addEventListener('input', filterHebergements);
            document.getElementById('typeFilter').addEventListener('change', filterHebergements);
            document.getElementById('villeFilter').addEventListener('change', filterHebergements);
            document.getElementById('sortFilter').addEventListener('change', filterHebergements);
        });

        function filterHebergements() {
            const searchTerm = document.getElementById('hebergementSearch').value.toLowerCase();
            const typeFilter = document.getElementById('typeFilter').value;
            const villeFilter = document.getElementById('villeFilter').value;
            const sortValue = document.getElementById('sortFilter').value;

            const hebergementCards = document.querySelectorAll('.hebergement-card');
            const filteredCards = [];

            hebergementCards.forEach(card => {
                const hebergementId = parseInt(card.getAttribute('data-hebergement-id'));
                const hebergement = hebergementsData.find(h => h.id === hebergementId);

                if (!hebergement) return;

                const matchesSearch = hebergement.nom.toLowerCase().includes(searchTerm) ||
                    hebergement.ville.toLowerCase().includes(searchTerm) ||
                    hebergement.pays.toLowerCase().includes(searchTerm);
                const matchesType = typeFilter === 'all' || hebergement.type_hebergement === typeFilter;
                const matchesVille = villeFilter === 'all' || hebergement.ville === villeFilter;

                if (matchesSearch && matchesType && matchesVille) {
                    card.style.display = 'flex';
                    filteredCards.push({
                        element: card,
                        nom: hebergement.nom,
                        note: hebergement.note_moyenne,
                        chambres: hebergement.nb_chambres
                    });
                } else {
                    card.style.display = 'none';
                }
            });

            filteredCards.sort((a, b) => {
                if (sortValue === 'nom') {
                    return a.nom.localeCompare(b.nom);
                } else if (sortValue === 'note') {
                    return b.note - a.note;
                } else if (sortValue === 'chambres') {
                    return b.chambres - a.chambres;
                }
                return 0;
            });

            const container = document.querySelector('.hebergements-list');
            filteredCards.forEach(card => {
                container.appendChild(card.element);
            });

            const visibleCards = Array.from(hebergementCards).filter(card => card.style.display !== 'none');
            const noHebergementsMsg = document.querySelector('.no-hebergements');
            noHebergementsMsg.style.display = visibleCards.length === 0 ? 'flex' : 'none';
        }

        function openHebergementModal(hebergementId) {
            const hebergement = hebergementsData.find(h => h.id === hebergementId);
            if (!hebergement) return;

            const imageHtml = hebergement.chambres.some(c => c.images.length > 0) ?
                `<img src="${hebergement.chambres.find(c => c.images.length > 0).images[0]}" alt="Hébergement image">` :
                `<div class="no-image-large"><i class="fas fa-image"></i></div>`;

            const chambresList = hebergement.chambres.length > 0 ?
                hebergement.chambres.map(chambre => `
                    <div class="chambre-item">
                        <span class="chambre-numero">Chambre ${chambre.numero}</span>
                        <span class="chambre-prix">${chambre.prix} TND</span>
                        <span class="chambre-capacite">${chambre.capacite} personnes</span>
                        <span class="chambre-disponibilite">${chambre.disponibilite ? 'Disponible' : 'Non disponible'}</span>
                    </div>
                `).join('') :
                '<p>Aucune chambre associée</p>';

            const modalContent = `
                <div class="modal-row">
                    <div class="modal-col image-col">
                        ${imageHtml}
                    </div>
                    <div class="modal-col details-col">
                        <div class="detail-group">
                            <h3>${hebergement.nom}</h3>
                            <div class="detail-row">
                                <span class="detail-label">Adresse:</span>
                                <span class="detail-value">${hebergement.adresse}, ${hebergement.ville}, ${hebergement.pays}</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Type:</span>
                                <span class="detail-value">${hebergement.type_hebergement}</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Note:</span>
                                <span class="detail-value">${hebergement.note_moyenne}/5</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Contact:</span>
                                <span class="detail-value">${hebergement.contact}</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="detail-group full-width">
                    <h4>Description</h4>
                    <p>${hebergement.description}</p>
                </div>

                <div class="detail-group full-width">
                    <h4>Services</h4>
                    <p>${hebergement.services}</p>
                </div>

                <div class="detail-group full-width">
                    <h4>Politique d'annulation</h4>
                    <p>${hebergement.politique_annulation}</p>
                </div>

                <div class="detail-group full-width">
                    <h4>Chambres</h4>
                    <div class="associated-chambres">
                        ${chambresList}
                    </div>
                </div>
            `;

            document.querySelector('#hebergementModal .modal-body').innerHTML = modalContent;
            document.getElementById('hebergementModal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('hebergementModal').style.display = 'none';
        }

        window.onclick = function(event) {
            if (event.target.className === 'modal') {
                closeModal();
            }
        }

        function initializeCharts() {
            if (chartsInitialized) return; // Prevent re-initialization
            chartsInitialized = true;

            const chartColors = [
                '#3498db', '#2ecc71', '#e74c3c', '#9b59b6',
                '#f1c40f', '#1abc9c', '#34495e', '#e67e22'
            ];

            // Villes Chart (3D Bar)
            new Chart(document.getElementById('villesChart'), {
                type: 'bar',
                data: {
                    labels: statsData.villes.map(v => v.ville),
                    datasets: [{
                        label: 'Nombre d\'hébergements',
                        data: statsData.villes.map(v => v.count),
                        backgroundColor: chartColors,
                        borderColor: '#2c3e50',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false },
                        title: { display: false }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Nombre d\'hébergements' }
                        },
                        x: {
                            title: { display: true, text: 'Villes' }
                        }
                    },
                    chartJs3D: {
                        enabled: true,
                        alpha: 20,
                        beta: 20,
                        depth: 50
                    }
                }
            });

            // Notes Chart (Doughnut)
            new Chart(document.getElementById('notesChart'), {
                type: 'doughnut',
                data: {
                    labels: statsData.notes.map(n => n.range),
                    datasets: [{
                        data: statsData.notes.map(n => n.count),
                        backgroundColor: chartColors,
                        hoverOffset: 20
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'right' },
                        tooltip: {
                            callbacks: {
                                label: ctx => ` ${ctx.label}: ${ctx.raw} hébergements`
                            }
                        }
                    }
                }
            });

            // Types Chart (Pie)
            new Chart(document.getElementById('typesChart'), {
                type: 'pie',
                data: {
                    labels: statsData.types.map(t => t.type_hebergement),
                    datasets: [{
                        data: statsData.types.map(t => t.count),
                        backgroundColor: chartColors,
                        hoverOffset: 20
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'right' },
                        tooltip: {
                            callbacks: {
                                label: ctx => ` ${ctx.label}: ${ctx.raw} hébergements`
                            }
                        }
                    }
                }
            });

            // Capacité Chart (Bar)
            new Chart(document.getElementById('capaciteChart'), {
                type: 'bar',
                data: {
                    labels: statsData.capacites.map(c => `${c.capacite} pers.`),
                    datasets: [{
                        label: 'Nombre de chambres',
                        data: statsData.capacites.map(c => c.count),
                        backgroundColor: '#3498db',
                        borderColor: '#2c3e50',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false },
                        title: { display: false }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Nombre de chambres' }
                        },
                        x: {
                            title: { display: true, text: 'Capacité' }
                        }
                    }
                }
            });

            // Prix Chart (Line)
            new Chart(document.getElementById('prixChart'), {
                type: 'line',
                data: {
                    labels: statsData.types.map(t => t.type_hebergement),
                    datasets: [{
                        label: 'Prix moyen',
                        data: statsData.types.map(t => t.avg_prix),
                        borderColor: '#e74c3c',
                        backgroundColor: '#e74c3c33',
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'top' }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Prix moyen (TND)' }
                        },
                        x: {
                            title: { display: true, text: 'Type d\'hébergement' }
                        }
                    }
                }
            });
        }
    </script>

    <style>
        .hebergements-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header h1 {
            color: #2c3e50;
            font-size: 24px;
            margin-bottom: 20px;
        }

        .tabs-nav {
            display: flex;
            border-bottom: 2px solid #3498db;
            margin-bottom: 20px;
        }

        .tab-btn {
            padding: 10px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
            color: #7f8c8d;
        }

        .tab-btn.active {
            color: #3498db;
            border-bottom: 2px solid #3498db;
            font-weight: bold;
        }

        .tab-pane {
            display: none;
        }

        .tab-pane.active {
            display: block;
        }

        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .search-filter {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .search-box {
            position: relative;
        }

        .search-box input {
            padding: 8px 35px 8px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 200px;
        }

        .search-btn {
            position: absolute;
            right: 5px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
        }

        .filters select {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-left: 10px;
        }

        .add-btn {
            padding: 10px 20px;
            background: #2ecc71;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .hebergements-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .hebergement-card {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            display: flex;
            flex-direction: column;
        }

        .hebergement-image img {
            width: 100%;
            height: 150px;
            object-fit: cover;
        }

        .hebergement-image .no-image {
            height: 150px;
            background: #ecf0f1;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #7f8c8d;
        }

        .hebergement-details {
            padding: 15px;
            flex-grow: 1;
        }

        .hebergement-main-info h3 {
            margin: 0 0 10px;
            color: #2c3e50;
        }

        .hebergement-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            color: #7f8c8d;
            font-size: 14px;
        }

        .hebergement-secondary-info {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        .hebergement-actions {
            padding: 10px;
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            border-top: 1px solid #ecf0f1;
        }

        .action-btn {
            background: none;
            border: none;
            cursor: pointer;
            padding: 8px;
            border-radius: 5px;
        }

        .view-btn { color: #3498db; }
        .edit-btn { color: #f1c40f; }
        .delete-btn { color: #e74c3c; }

        .no-hebergements {
            grid-column: 1 / -1;
            text-align: center;
            padding: 20px;
            color: #7f8c8d;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 20px;
            border-radius: 10px;
            max-width: 800px;
            position: relative;
        }

        .close-btn {
            position: absolute;
            right: 20px;
            top: 15px;
            font-size: 24px;
            cursor: pointer;
        }

        .modal-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .modal-col {
            flex: 1;
        }

        .image-col img {
            width: 100%;
            max-height: 300px;
            object-fit: cover;
            border-radius: 5px;
        }

        .no-image-large {
            height: 300px;
            background: #ecf0f1;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #7f8c8d;
            border-radius: 5px;
        }

        .detail-group {
            margin-bottom: 20px;
        }

        .detail-row {
            display: flex;
            margin-bottom: 10px;
        }

        .detail-label {
            flex: 0 0 120px;
            color: #7f8c8d;
        }

        .detail-value {
            flex: 1;
        }

        .full-width {
            width: 100%;
        }

        .associated-chambres {
            max-height: 200px;
            overflow-y: auto;
        }

        .chambre-item {
            padding: 10px;
            border-bottom: 1px solid #ecf0f1;
            display: flex;
            gap: 15px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .stat-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            min-height: 300px;
        }

        .stat-card h3 {
            color: #2c3e50;
            margin-bottom: 1.5rem;
            font-size: 1.2em;
            border-bottom: 2px solid #3498db;
            padding-bottom: 0.5rem;
        }

        .stat-card canvas {
            max-height: 250px;
            width: 100% !important;
        }

        @media (max-width: 768px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
            .modal-row {
                flex-direction: column;
            }
            .search-box input {
                width: 150px;
            }
        }
    </style>
{% endblock %}