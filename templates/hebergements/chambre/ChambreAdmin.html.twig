{% extends 'baseAdmin.html.twig' %}

{% block titre %}Gestion des Chambres{% endblock %}

{% block content %}
    <link rel="stylesheet" href="{{ asset('css/hebergements/admin.css') }}"/>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-3d@0.8.1/dist/chartjs-chart-3d.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>

    <div class="chambres-container">
        <div class="header">
            <div class="d-flex justify-content-between align-items-center">
                <h1><i class="fas fa-bed"></i> Gestion des Chambres</h1>
                <a href="{{ path('admin_export_hebergements') }}" class="btn btn-info">
                    <i class="fas fa-file-excel"></i> Exporter Excel
                </a>
            </div>
        </div>

        <div class="chambres-content">
            <!-- Navigation Tabs -->
            <div class="tabs-nav">
                <button class="tab-btn active" data-tab="chambres">Chambres</button>
                <button class="tab-btn" data-tab="stats">Statistiques</button>
            </div>

            <!-- Chambres Tab -->
            <div id="chambres" class="tab-pane active">
                <div class="table-header">
                    <div class="search-filter">
                        <div class="search-box">
                            <input type="text" id="chambreSearch" placeholder="Rechercher des chambres...">
                            <button class="search-btn"><i class="fas fa-search"></i></button>
                        </div>
                        <div class="filters">
                            <select id="hebergementFilter">
                                <option value="all">Tous les hébergements</option>
                                {% for hebergement in hebergements %}
                                    <option value="{{ hebergement.id }}">{{ hebergement.nom }}</option>
                                {% endfor %}
                            </select>
                            <select id="disponibiliteFilter">
                                <option value="all">Toutes disponibilités</option>
                                <option value="disponible">Disponible</option>
                                <option value="occupee">Occupée</option>
                            </select>
                            <select id="capaciteFilter">
                                <option value="all">Toutes capacités</option>
                                {% for capacite in stats.capacites %}
                                    <option value="{{ capacite.capacite }}">{{ capacite.capacite }} pers.</option>
                                {% endfor %}
                            </select>
                            <select id="sortFilter">
                                <option value="numero">Numéro</option>
                                <option value="prix">Prix</option>
                                <option value="capacite">Capacité</option>
                            </select>
                        </div>
                    </div>

                </div>

                <div class="chambres-list">
                    {% for chambre in chambres %}
                        <div class="chambre-card"
                             data-hebergement="{{ chambre.id_hebergement.id }}"
                             data-disponibilite="{{ chambre.disponibilite ? 'disponible' : 'occupee' }}"
                             data-capacite="{{ chambre.capacite|default(0) }}"
                             data-prix="{{ chambre.prix|default(0) }}"
                             data-chambre-id="{{ chambre.id }}">
                            <div class="chambre-image">
                                {% if chambre.images|length > 0 %}
                                    <img src="{{ asset(chambre.images[0].url_image) }}" alt="Chambre {{ chambre.numero }}">
                                {% else %}
                                    <div class="no-image">
                                        <i class="fas fa-image"></i>
                                    </div>
                                {% endif %}
                            </div>
                            <div class="chambre-details">
                                <div class="chambre-main-info">
                                    <h3>Chambre {{ chambre.numero }}</h3>
                                    <div class="chambre-meta">
                                        <span class="hebergement">
                                            <i class="fas fa-hotel"></i> {{ chambre.id_hebergement.nom }}
                                        </span>
                                        <span class="disponibilite">
                                            <i class="fas fa-check-circle"></i> {{ chambre.disponibilite ? 'Disponible' : 'Occupée' }}
                                        </span>
                                    </div>
                                </div>
                                <div class="chambre-secondary-info">
                                    <div class="chambre-prix">
                                        <i ></i> {{ chambre.prix|number_format(2, ',', ' ') }} TND
                                    </div>
                                    <div class="chambre-capacite">
                                        <i class="fas fa-user"></i> {{ chambre.capacite|default(0) }} pers.
                                    </div>
                                </div>
                            </div>
                            <div class="chambre-actions">
                                <button class="action-btn view-btn" onclick="openChambreModal({{ chambre.id }})">
                                    <i class="fas fa-eye"></i>
                                </button>
                                
                            </div>
                        </div>
                    {% else %}
                        <div class="no-chambres">
                            <i class="fas fa-info-circle"></i>
                            <p>Aucune chambre trouvée</p>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Statistiques Tab -->
            <div id="stats" class="tab-pane">
                <!-- Sélecteur de période -->
                <div class="period-selector">
                    <button class="period-btn active" data-period="month">Ce mois</button>
                    <button class="period-btn" data-period="quarter">Ce trimestre</button>
                    <button class="period-btn" data-period="year">Cette année</button>
                </div>

                <!-- Tableau de bord prédictif -->
                <div class="prediction-dashboard">
                    <div class="smart-card">
                        <div class="card-header">
                            <h3><i class="fas fa-brain"></i> Prévisions IA</h3>
                            <span class="confidence-badge">Précision {{ stats.predictions.confidence_score }}%</span>
                        </div>
                        <div class="prediction-grid">
                            {% for period in stats.predictions.peak_periods %}
                                <div class="prediction-item">
                                    <div class="prediction-icon">
                                        <i class="fas fa-chart-line"></i>
                                    </div>
                                    <div class="prediction-content">
                                        <h4>Pic de réservations prévu</h4>
                                        <p class="highlight">{{ period.start_date|date('d/m/Y') }} - {{ period.end_date|date('d/m/Y') }}</p>
                                        <div class="advice">
                                            Suggestion: Augmentez les tarifs de {{ period.suggested_price_increase }}%
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                            
                            {% for period in stats.predictions.low_periods %}
                                <div class="prediction-item">
                                    <div class="prediction-icon warning">
                                        <i class="fas fa-arrow-down"></i>
                                    </div>
                                    <div class="prediction-content">
                                        <h4>Période creuse à venir</h4>
                                        <p class="highlight">{{ period.start_date|date('d/m/Y') }} - {{ period.end_date|date('d/m/Y') }}</p>
                                        <div class="advice">
                                            Suggestion: Lancez une promotion -{{ period.suggested_discount }}%
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>

                <!-- KPI Cards -->
                <div class="kpi-grid">
                    {% for trend in stats.trends|keys %}
                        <div class="kpi-card">
                            <div class="kpi-icon">
                                <i class="fas fa-{{ trend starts with 'occupancy' ? 'bed' : (trend starts with 'revenue' ? 'euro-sign' : 'star') }}"></i>
                            </div>
                            <div class="kpi-content">
                                <h4>{{ trend|replace({'_': ' '})|title }}</h4>
                                <div class="kpi-value">{{ stats.trends[trend].current }}{{ trend starts with 'revenue' ? ' TND' : '%' }}</div>
                                <div class="kpi-trend {{ stats.trends[trend].trend == 'up' ? 'positive' : 'negative' }}">
                                    <i class="fas fa-arrow-{{ stats.trends[trend].trend }}"></i>
                                    {{ stats.trends[trend].change }}%
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>

                <!-- Graphiques principaux -->
                <div class="charts-grid">
                    <!-- Carte de chaleur des chambres -->
                    <div class="chart-card chart-large">
                        <h3><i class="fas fa-fire"></i> Popularité des Chambres</h3>
                        <canvas id="roomHeatmap"></canvas>
                    </div>

                    <!-- Graphiques existants améliorés -->
                    <div class="chart-card">
                        <h3><i class="fas fa-hotel"></i> Chambres par Hébergement</h3>
                        <canvas id="hebergementsChart"></canvas>
                    </div>

                    <div class="chart-card">
                        <h3><i class="fas fa-users"></i> Répartition des Capacités</h3>
                        <canvas id="capacitesChart"></canvas>
                    </div>

                    <div class="chart-card">
                        <h3><i class="fas fa-tag"></i> Prix Moyen par Hébergement</h3>
                        <canvas id="prixChart"></canvas>
                    </div>
                </div>

                <!-- Performance du Personnel -->
                <div class="performance-gamification">
                    <h3><i class="fas fa-trophy"></i> Performance du Personnel</h3>
                    <div class="leaderboard">
                        {% for performer in stats.performance.top_performers %}
                            <div class="performer-card {{ loop.first ? 'gold' : 'silver' }}">
                                <div class="performer-avatar">
                                    <i class="fas fa-{{ loop.first ? 'crown' : 'medal' }}"></i>
                                </div>
                                <div class="performer-info">
                                    <h4>{{ loop.first ? 'Meilleure' : 'Excellente' }} Performance</h4>
                                    <p>{{ performer.name }}</p>
                                    <div class="score">{{ performer.score }} points</div>
                                </div>
                                <div class="badges">
                                    {% for badge in performer.badges %}
                                        <span class="badge" title="{{ badge|title }}">
                                            {{ badge == 'speed' ? '⚡' : (badge == 'service' ? '🌟' : '✨') }}
                                        </span>
                                    {% endfor %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Chambre Details Modal -->
    <div id="chambreModal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeModal()">×</span>
            <h2>Détails de la Chambre</h2>
            <div class="modal-body">
                <!-- Content will be filled by JavaScript -->
            </div>
        </div>
    </div>

    <script>
        // Store chambres data for JavaScript access
        const chambresData = [
            {% for chambre in chambres %}
            {
                id: {{ chambre.id }},
                numero: "{{ chambre.numero }}",
                disponibilite: {{ chambre.disponibilite ? 'true' : 'false' }},
                prix: {{ chambre.prix|default(0) }},
                description: "{{ chambre.description|default('')|escape('js') }}",
                capacite: {{ chambre.capacite|default(0) }},
                equipements: "{{ chambre.equipements|default('')|escape('js') }}",
                vue: "{{ chambre.vue|default('')|escape('js') }}",
                taille: {{ chambre.taille|default(0) }},
                url_3d: "{{ chambre.url_3d|default('')|escape('js') }}",
                hebergement: {
                    id: {{ chambre.id_hebergement.id }},
                    nom: "{{ chambre.id_hebergement.nom|escape('js') }}"
                },
                images: [
                    {% for image in chambre.images %}
                    "{{ asset(image.url_image) }}",
                    {% endfor %}
                ]
            },
            {% endfor %}
        ];

        const statsData = {{ stats|json_encode|raw }};

        // Flag to prevent chart re-initialization
        let chartsInitialized = false;

        // Tab functionality
        document.addEventListener('DOMContentLoaded', function() {
            const tabBtns = document.querySelectorAll('.tab-btn');
            const tabPanes = document.querySelectorAll('.tab-pane');

            // Ensure only the active tab is visible on load
            tabPanes.forEach(pane => {
                pane.style.display = pane.classList.contains('active') ? 'block' : 'none';
            });

            tabBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const tabId = this.getAttribute('data-tab');

                    // Remove active class from all buttons and hide all panes
                    tabBtns.forEach(b => b.classList.remove('active'));
                    tabPanes.forEach(pane => pane.style.display = 'none');

                    // Add active class to clicked button and show corresponding pane
                    this.classList.add('active');
                    document.getElementById(tabId).style.display = 'block';

                    // Initialize charts only when the stats tab is clicked
                    if (tabId === 'stats' && !chartsInitialized) {
                        initializeCharts();
                    }
                });
            });

            // Add event listeners for filters
            document.getElementById('chambreSearch').addEventListener('input', filterChambres);
            document.getElementById('hebergementFilter').addEventListener('change', filterChambres);
            document.getElementById('disponibiliteFilter').addEventListener('change', filterChambres);
            document.getElementById('capaciteFilter').addEventListener('change', filterChambres);
            document.getElementById('sortFilter').addEventListener('change', filterChambres);
        });

        function filterChambres() {
            const searchTerm = document.getElementById('chambreSearch').value.toLowerCase();
            const hebergementFilter = document.getElementById('hebergementFilter').value;
            const disponibiliteFilter = document.getElementById('disponibiliteFilter').value;
            const capaciteFilter = document.getElementById('capaciteFilter').value;
            const sortValue = document.getElementById('sortFilter').value;

            const chambreCards = document.querySelectorAll('.chambre-card');
            const filteredCards = [];

            chambreCards.forEach(card => {
                const chambreId = parseInt(card.getAttribute('data-chambre-id'));
                const chambre = chambresData.find(c => c.id === chambreId);

                if (!chambre) return;

                const matchesSearch = chambre.numero.toLowerCase().includes(searchTerm) ||
                    chambre.hebergement.nom.toLowerCase().includes(searchTerm);
                const matchesHebergement = hebergementFilter === 'all' || chambre.hebergement.id.toString() === hebergementFilter;
                const matchesDisponibilite = disponibiliteFilter === 'all' ||
                    (disponibiliteFilter === 'disponible' && chambre.disponibilite) ||
                    (disponibiliteFilter === 'occupee' && !chambre.disponibilite);
                const matchesCapacite = capaciteFilter === 'all' || chambre.capacite.toString() === capaciteFilter;

                if (matchesSearch && matchesHebergement && matchesDisponibilite && matchesCapacite) {
                    card.style.display = 'flex';
                    filteredCards.push({
                        element: card,
                        numero: chambre.numero,
                        prix: chambre.prix,
                        capacite: chambre.capacite
                    });
                } else {
                    card.style.display = 'none';
                }
            });

            filteredCards.sort((a, b) => {
                if (sortValue === 'numero') {
                    return a.numero.localeCompare(b.numero);
                } else if (sortValue === 'prix') {
                    return b.prix - a.prix;
                } else if (sortValue === 'capacite') {
                    return b.capacite - a.capacite;
                }
                return 0;
            });

            const container = document.querySelector('.chambres-list');
            filteredCards.forEach(card => {
                container.appendChild(card.element);
            });

            const visibleCards = Array.from(chambreCards).filter(card => card.style.display !== 'none');
            const noChambresMsg = document.querySelector('.no-chambres');
            noChambresMsg.style.display = visibleCards.length === 0 ? 'flex' : 'none';
        }

        function openChambreModal(chambreId) {
            const chambre = chambresData.find(c => c.id === chambreId);
            if (!chambre) return;

            const imageHtml = chambre.images.length > 0 ?
                `<img src="${chambre.images[0]}" alt="Chambre image">` :
                `<div class="no-image-large"><i class="fas fa-image"></i></div>`;

            const modalContent = `
                <div class="modal-row">
                    <div class="modal-col image-col">
                        ${imageHtml}
                    </div>
                    <div class="modal-col details-col">
                        <div class="detail-group">
                            <h3>Chambre ${chambre.numero}</h3>
                            <div class="detail-row">
                                <span class="detail-label">Hébergement:</span>
                                <span class="detail-value">${chambre.hebergement.nom}</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Disponibilité:</span>
                                <span class="detail-value">${chambre.disponibilite ? 'Disponible' : 'Occupée'}</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Prix:</span>
                                <span class="detail-value">${chambre.prix.toFixed(2)} TND</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Capacité:</span>
                                <span class="detail-value">${chambre.capacite} personnes</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="detail-group full-width">
                    <h4>Description</h4>
                    <p>${chambre.description || 'Aucune description'}</p>
                </div>

                <div class="detail-group full-width">
                    <h4>Équipements</h4>
                    <p>${chambre.equipements || 'Aucun équipement'}</p>
                </div>

                <div class="detail-group full-width">
                    <h4>Vue</h4>
                    <p>${chambre.vue || 'Aucune vue spécifiée'}</p>
                </div>

                <div class="detail-group full-width">
                    <h4>Taille</h4>
                    <p>${chambre.taille ? chambre.taille + ' m²' : 'Non spécifiée'}</p>
                </div>

                <div class="detail-group full-width">
                    <h4>URL 3D</h4>
                    <p>${chambre.url_3d ? '<a href="' + chambre.url_3d + '" target="_blank">Voir le modèle 3D</a>' : 'Aucun modèle 3D'}</p>
                </div>
            `;

            document.querySelector('#chambreModal .modal-body').innerHTML = modalContent;
            document.getElementById('chambreModal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('chambreModal').style.display = 'none';
        }

        window.onclick = function(event) {
            if (event.target.className === 'modal') {
                closeModal();
            }
        }

        function initializeCharts() {
            if (chartsInitialized) return;
            chartsInitialized = true;

            const chartColors = {
                primary: '#3498db',
                secondary: '#2ecc71',
                tertiary: '#e74c3c',
                quaternary: '#9b59b6',
                quinary: '#f1c40f',
                senary: '#1abc9c'
            };

            // Carte de chaleur des chambres
            new Chart(document.getElementById('roomHeatmap'), {
                type: 'heatmap',
                data: {
                    datasets: [{
                        data: {{ stats.heatmap|json_encode|raw }},
                        label: 'Popularité des chambres',
                        backgroundColor: (context) => {
                            const value = context.raw ? context.raw.v : 0;
                            if (value > 80) return '#ff6b6b';
                            if (value > 50) return '#ffd93d';
                            return '#4CAF50';
                        }
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: false,
                        tooltip: {
                            callbacks: {
                                label: (context) => `Popularité: ${context.raw.v}%`
                            }
                        }
                    },
                    scales: {
                        x: { title: { display: true, text: 'Étages' } },
                        y: { title: { display: true, text: 'Chambres' } }
                    }
                }
            });

            // Hébergements Chart (3D Bar)
            new Chart(document.getElementById('hebergementsChart'), {
                type: 'bar',
                data: {
                    labels: statsData.hebergements.map(h => h.hebergement),
                    datasets: [{
                        label: 'Nombre de chambres',
                        data: statsData.hebergements.map(h => h.count),
                        backgroundColor: chartColors,
                        borderColor: '#2c3e50',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false },
                        title: { display: false }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Nombre de chambres' }
                        },
                        x: {
                            title: { display: true, text: 'Hébergements' }
                        }
                    },
                    chartJs3D: {
                        enabled: true,
                        alpha: 20,
                        beta: 20,
                        depth: 50
                    }
                }
            });

            // Capacités Chart (Pie)
            new Chart(document.getElementById('capacitesChart'), {
                type: 'pie',
                data: {
                    labels: statsData.capacites.map(c => `${c.capacite} pers.`),
                    datasets: [{
                        data: statsData.capacites.map(c => c.count),
                        backgroundColor: chartColors,
                        hoverOffset: 20
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'right' },
                        tooltip: {
                            callbacks: {
                                label: ctx => ` ${ctx.label}: ${ctx.raw} chambres`
                            }
                        }
                    }
                }
            });

            // Prix Chart (Line)
            new Chart(document.getElementById('prixChart'), {
                type: 'line',
                data: {
                    labels: statsData.prix.map(p => p.hebergement),
                    datasets: [{
                        label: 'Prix moyen',
                        data: statsData.prix.map(p => p.avg_prix),
                        borderColor: '#e74c3c',
                        backgroundColor: '#e74c3c33',
                        fill: true,
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { position: 'top' }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: { display: true, text: 'Prix moyen (TND)' }
                        },
                        x: {
                            title: { display: true, text: 'Hébergement' }
                        }
                    }
                }
            });
        }

        // Gestion des périodes
        document.querySelectorAll('.period-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.querySelectorAll('.period-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                updateChartsData(this.dataset.period);
            });
        });

        function updateChartsData(period) {
            // À implémenter : mise à jour des données selon la période
            console.log(`Updating charts for period: ${period}`);
        }
    </script>

    <style>
        .chambres-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header h1 {
            color: #2c3e50;
            font-size: 24px;
            margin-bottom: 20px;
        }

        .tabs-nav {
            display: flex;
            border-bottom: 2px solid #3498db;
            margin-bottom: 20px;
        }

        .tab-btn {
            padding: 10px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
            color: #7f8c8d;
        }

        .tab-btn.active {
            color: #3498db;
            border-bottom: 2px solid #3498db;
            font-weight: bold;
        }

        .tab-pane {
            display: none;
        }

        .tab-pane.active {
            display: block;
        }

        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .search-filter {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .search-box {
            position: relative;
        }

        .search-box input {
            padding: 8px 35px 8px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 200px;
        }

        .search-btn {
            position: absolute;
            right: 5px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
        }

        .filters select {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-left: 10px;
        }

        .add-btn {
            padding: 10px 20px;
            background: #2ecc71;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
        }

        .chambres-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .chambre-card {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            display: flex;
            flex-direction: column;
        }

        .chambre-image img {
            width: 100%;
            height: 150px;
            object-fit: cover;
        }

        .chambre-image .no-image {
            height: 150px;
            background: #ecf0f1;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #7f8c8d;
        }

        .chambre-details {
            padding: 15px;
            flex-grow: 1;
        }

        .chambre-main-info h3 {
            margin: 0 0 10px;
            color: #2c3e50;
        }

        .chambre-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            color: #7f8c8d;
            font-size: 14px;
        }

        .chambre-secondary-info {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        .chambre-actions {
            padding: 10px;
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            border-top: 1px solid #ecf0f1;
        }

        .action-btn {
            background: none;
            border: none;
            cursor: pointer;
            padding: 8px;
            border-radius: 5px;
        }

        .view-btn { color: #3498db; }
        .edit-btn { color: #f1c40f; }
        .delete-btn { color: #e74c3c; }

        .no-chambres {
            grid-column: 1 / -1;
            text-align: center;
            padding: 20px;
            color: #7f8c8d;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 20px;
            border-radius: 10px;
            max-width: 800px;
            position: relative;
        }

        .close-btn {
            position: absolute;
            right: 20px;
            top: 15px;
            font-size: 24px;
            cursor: pointer;
        }

        .modal-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .modal-col {
            flex: 1;
        }

        .image-col img {
            width: 100%;
            max-height: 300px;
            object-fit: cover;
            border-radius: 5px;
        }

        .no-image-large {
            height: 300px;
            background: #ecf0f1;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #7f8c8d;
            border-radius: 5px;
        }

        .detail-group {
            margin-bottom: 20px;
        }

        .detail-row {
            display: flex;
            margin-bottom: 10px;
        }

        .detail-label {
            flex: 0 0 120px;
            color: #7f8c8d;
        }

        .detail-value {
            flex: 1;
        }

        .full-width {
            width: 100%;
        }

        .prediction-dashboard {
            padding: 2rem;
            background: linear-gradient(135deg, #f6f8fd 0%, #f1f4f9 100%);
            border-radius: 20px;
            margin: 2rem 0;
        }

        .smart-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 8px 20px rgba(0,0,0,0.08);
            margin-bottom: 2rem;
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .confidence-badge {
            background: #4CAF50;
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        .prediction-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .prediction-item {
            display: flex;
            gap: 1rem;
            padding: 1.5rem;
            background: #f8f9fa;
            border-radius: 12px;
            transition: transform 0.3s ease;
        }

        .prediction-item:hover {
            transform: translateY(-5px);
        }

        .prediction-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            background: #4361ee;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .prediction-icon.warning {
            background: #ff6b6b;
        }

        .highlight {
            color: #4361ee;
            font-weight: bold;
            font-size: 1.2rem;
            margin: 0.5rem 0;
        }

        .advice {
            background: #e3f2fd;
            padding: 0.8rem;
            border-radius: 8px;
            font-size: 0.9rem;
            color: #1565c0;
        }

        .kpi-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
        }

        .kpi-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .kpi-icon {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            background: var(--bs-primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }

        .kpi-content {
            flex: 1;
        }

        .kpi-value {
            font-size: 24px;
            font-weight: bold;
            color: #2c3e50;
            margin: 0.5rem 0;
        }

        .kpi-trend {
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .kpi-trend.positive {
            color: #2ecc71;
        }

        .kpi-trend.negative {
            color: #e74c3c;
        }

        .performance-gamification {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-top: 2rem;
        }

        .leaderboard {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-top: 1.5rem;
        }

        .performer-card {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .performer-card.gold {
            background: linear-gradient(135deg, #ffd700 0%, #ffed4a 100%);
        }

        .performer-card.silver {
            background: linear-gradient(135deg, #e2e2e2 0%, #f5f5f5 100%);
        }

        .performer-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: #4361ee;
        }

        .badges {
            display: flex;
            gap: 0.5rem;
        }

        .badge {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
{% endblock %}