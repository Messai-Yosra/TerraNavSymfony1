{% extends "baseAdmin.html.twig" %}

{% block titre %}Transports{% endblock %}

{% block content %}
    <link rel="stylesheet" href="{{ asset('css/transports/adminTransportList.css') }}"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>

    <div class="content-card">
        <div class="card-header">
            <h1><i class="fas fa-bus"></i> Gestion des transports</h1>
        </div>
        
        <div class="card-body">
            {% if not ajax %}
                <div class="action-buttons">
                    <a href="{{ path('admin_transports') }}" class="btn btn-primary">
                        <i class="fas fa-arrow-left"></i> Retour à l'accueil
                    </a>
                    <a href="{{ path('admin_trajets_index') }}" class="btn btn-primary">
                        <i class="fas fa-list"></i> Voir la liste des Trajets
                    </a>
                    <a href="{{ path('client_transports_export_pdf') }}" class="btn btn-primary">Exporter en PDF <i class="fa fa-file-pdf ms-2"></i></a>
                </div>

                <!-- Search Input -->
                <div class="mb-3">
                    <input type="text" id="search-input" class="form-control" placeholder="Rechercher un transport par nom..." value="{{ searchTerm|default('') }}">
                </div>
            {% endif %}
            
            <!-- Transport Table Container -->
            <div id="transport-list">
                {% block transport_list %}
                    {% if transports|length > 0 %}
                        <div class="table-responsive">
                            <table class="data-table">
                                <thead>
                                    <tr>
                                        <th>Nom</th>
                                        <th>Type</th>
                                        <th>Prix</th>
                                        <th>Capacité</th>
                                        <th class="actions-column">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for transport in transports %}
                                        <tr class="transport-row" data-transport-id="{{ transport.id }}">
                                            <td>{{ transport.nom }}</td>
                                            <td>{{ transport.type }}</td>
                                            <td>{{ transport.prix }} DTN</td>
                                            <td>{{ transport.capacite }}</td>
                                            <td class="actions-column">
                                                <div class="row-actions">
                                                    <button class="btn btn-primary btn-details" title="Détails" 
                                                            data-transport-id="{{ transport.id }}">
                                                        <i class="fas fa-info-circle"></i> Détails
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                        <!-- Expandable Details Row -->
                                        <tr class="details-row" id="details-{{ transport.id }}" style="display: none;">
                                            <td colspan="5">
                                                <div class="details-content">
                                                    <h3>Détails du Transport</h3>
                                                    <p><strong>Nom:</strong> {{ transport.nom }}</p>
                                                    <p><strong>Type:</strong> {{ transport.type }}</p>
                                                    <p><strong>Prix:</strong> {{ transport.prix }} DTN</p>
                                                    <p><strong>Capacité:</strong> {{ transport.capacite }}</p>
                                                    <p><strong>Description:</strong> {{ transport.description|default('Non spécifié') }}</p>
                                                    <p><strong>Contact:</strong> {{ transport.contact|default('Non spécifié') }}</p>
                                                    <p><strong>Image:</strong></p>
                                                    <div class="image-container">
                                                        {% if transport.imagePath %}
                                                            <img src="{{ asset(transport.imagePath) }}" alt="Image du transport" class="transport-image">
                                                        {% else %}
                                                            <span>Aucune image disponible</span>
                                                        {% endif %}
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                        <!-- Pagination Controls -->
                        <div class="pagination">
                            {{ knp_pagination_render(transports) }}
                        </div>
                    {% else %}
                        <div class="empty-state">
                            <i class="fas fa-bus-alt empty-icon"></i>
                            <p>Aucun transport disponible pour le moment.</p>
                        </div>
                    {% endif %}
                {% endblock %}
            </div>
        </div>
    </div>

    {% if not ajax %}
       document.addEventListener('DOMContentLoaded', function () {
    const searchInput = document.getElementById('search-input');
    const transportList = document.getElementById('transport-list');

    // Fonction debounce pour limiter les requêtes
    function debounce(func, wait) {
        let timeout;
        return function() {
            const context = this, args = arguments;
            clearTimeout(timeout);
            timeout = setTimeout(function() {
                func.apply(context, args);
            }, wait);
        };
    }

    // Charger les résultats
    function loadResults(searchTerm, page = 1) {
        const url = new URL('{{ path('admin_transports_list') }}', window.location.origin);
        url.searchParams.set('search', searchTerm);
        url.searchParams.set('page', page);

        fetch(url.toString(), {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                transportList.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-exclamation-triangle empty-icon error"></i>
                        <p>${data.error}</p>
                    </div>`;
                return;
            }

            transportList.innerHTML = data.html;
            setupDetailsButtons();
            updatePagination(data.currentPage, data.pageCount, searchTerm);
        })
        .catch(error => {
            console.error('Error:', error);
            transportList.innerHTML = `
                <div class="empty-state">
                    <i class="fas fa-exclamation-triangle empty-icon error"></i>
                    <p>Une erreur est survenue lors du chargement des données.</p>
                </div>`;
        });
    }

    // Mise à jour de la pagination
    function updatePagination(currentPage, pageCount, searchTerm) {
        let paginationHtml = `
            <nav aria-label="Page navigation">
                <ul class="pagination">`;

        // Bouton Précédent
        if (currentPage > 1) {
            paginationHtml += `
                <li class="page-item">
                    <a class="page-link" href="#" onclick="loadPage(${currentPage - 1}, '${searchTerm}')" aria-label="Previous">
                        <span aria-hidden="true"><i class="fas fa-chevron-left"></i></span>
                    </a>
                </li>`;
        } else {
            paginationHtml += `
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true"><i class="fas fa-chevron-left"></i></span>
                </li>`;
        }

        // Numéros de page
        for (let page = 1; page <= pageCount; page++) {
            paginationHtml += `
                <li class="page-item ${page === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="loadPage(${page}, '${searchTerm}')">${page}</a>
                </li>`;
        }

        // Bouton Suivant
        if (currentPage < pageCount) {
            paginationHtml += `
                <li class="page-item">
                    <a class="page-link" href="#" onclick="loadPage(${currentPage + 1}, '${searchTerm}')" aria-label="Next">
                        <span aria-hidden="true"><i class="fas fa-chevron-right"></i></span>
                    </a>
                </li>`;
        } else {
            paginationHtml += `
                <li class="page-item disabled">
                    <span class="page-link" aria-hidden="true"><i class="fas fa-chevron-right"></i></span>
                </li>`;
        }

        paginationHtml += `
                </ul>
            </nav>`;

        const paginationContainer = document.querySelector('.pagination-container');
        if (paginationContainer) {
            paginationContainer.innerHTML = paginationHtml;
        }
    }

    // Fonction globale pour charger une page
    window.loadPage = function(page, searchTerm) {
        loadResults(searchTerm, page);
        return false;
    };

    // Écouteur d'événement pour la recherche
    if (searchInput) {
        searchInput.addEventListener('input', debounce(function() {
            const searchTerm = this.value.trim();
            loadResults(searchTerm);
        }, 300));
    }

    // Fonction pour gérer les boutons de détails
    function setupDetailsButtons() {
        const detailsButtons = document.querySelectorAll('.btn-details');
        detailsButtons.forEach(button => {
            button.addEventListener('click', function() {
                const transportId = this.getAttribute('data-transport-id');
                const detailsRow = document.getElementById(`details-${transportId}`);
                const transportRow = document.querySelector(`.transport-row[data-transport-id="${transportId}"]`);

                if (detailsRow.style.display === 'none' || detailsRow.style.display === '') {
                    // Fermer tous les autres détails
                    document.querySelectorAll('.details-row').forEach(row => {
                        row.style.display = 'none';
                    });
                    document.querySelectorAll('.transport-row').forEach(row => {
                        row.classList.remove('active-row');
                    });
                    document.querySelectorAll('.btn-details').forEach(btn => {
                        btn.innerHTML = '<i class="fas fa-info-circle"></i> Détails';
                        btn.classList.remove('btn-danger');
                        btn.classList.add('btn-info');
                    });

                    // Ouvrir ce détail
                    detailsRow.style.display = 'table-row';
                    transportRow.classList.add('active-row');
                    this.innerHTML = '<i class="fas fa-times-circle"></i> Fermer';
                    this.classList.remove('btn-info');
                    this.classList.add('btn-danger');
                } else {
                    // Fermer ce détail
                    detailsRow.style.display = 'none';
                    transportRow.classList.remove('active-row');
                    this.innerHTML = '<i class="fas fa-info-circle"></i> Détails';
                    this.classList.remove('btn-danger');
                    this.classList.add('btn-info');
                }
            });
        });
    }

    // Initialisation
    setupDetailsButtons();
});
    {% endif %}
{% endblock %}