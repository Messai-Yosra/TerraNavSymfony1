{% extends "baseClient.html.twig" %}

{% block titre %}Résultats de recherche de transport{% endblock %}

{% block content %}
    <link rel="stylesheet" href="{{ asset('css/transports/ClientTransport.css') }}">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Transport Search Results Section -->
    <div class="container-xxl py-5">
        <div class="container">
            <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
                <h1 class="mb-5">Résultats de <span class="text-primary text-uppercase">Recherche</span></h1>
                <p class="mb-4">
                    {% if departure %}
                        Trajets depuis {{ departure }}
                    {% else %}
                        Veuillez spécifier un point de départ
                    {% endif %}
                </p>
                <a href="{{ path('app_transports') }}" class="btn btn-primary rounded-pill py-3 px-5 mb-4">Nouvelle recherche</a>
            </div>

            <!-- Filter Section -->
            <div class="container-fluid booking pb-5 wow fadeIn" data-wow-delay="0.1s">
                <div class="container">
                    <div class="bg-white shadow rounded-3" style="padding: 25px;">
                        <form id="filterForm" method="get" action="{{ path('app_transport_search') }}" class="auto-submit-form">
                            <input type="hidden" name="departure" value="{{ departure ?? '' }}">
                            <div class="row g-3 align-items-end">
                                <!-- Price Range -->
                                <div class="col-md-4">
                                    <div class="mb-2">
                                        <label for="minPriceSlider" class="form-label fw-semibold">Fourchette de prix (DTN)</label>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span id="minPriceValue" class="badge bg-primary">{{ filterParams.minPrice ?? 0 }} DTN</span>
                                            <span id="maxPriceValue" class="badge bg-primary">{{ filterParams.maxPrice ?? 1000 }} DTN</span>
                                        </div>
                                        <div class="range-sliders">
                                            <input type="range" class="form-range" id="minPriceSlider"
                                                   min="0" max="1000" step="10"
                                                   value="{{ filterParams.minPrice ?? 0 }}">
                                            <input type="range" class="form-range" id="maxPriceSlider"
                                                   min="0" max="1000" step="10"
                                                   value="{{ filterParams.maxPrice ?? 1000 }}">
                                        </div>
                                        <input type="hidden" id="minPrice" name="minPrice" value="{{ filterParams.minPrice ?? 0 }}">
                                        <input type="hidden" id="maxPrice" name="maxPrice" value="{{ filterParams.maxPrice ?? 1000 }}">
                                    </div>
                                </div>

                                <!-- Minimum Capacity -->
                                <div class="col-md-2">
                                    <label for="minCapacity" class="form-label fw-semibold">Capacité min</label>
                                    <input type="number" id="minCapacity" name="minCapacity"
                                           class="form-control" min="1"
                                           value="{{ filterParams.minCapacity ?? '' }}"
                                           placeholder="Ex: 2">
                                </div>

                                <!-- Transport Type -->
                                <div class="col-md-2">
                                    <label for="type" class="form-label fw-semibold">Type</label>
                                    <select class="form-select" id="type" name="type">
                                        <option value="all">Tous types</option>
                                        <option value="Voiture privée" {% if filterParams.type == 'Voiture privée' %}selected{% endif %}>Voiture privée</option>
                                        <option value="Taxi" {% if filterParams.type == 'Taxi' %}selected{% endif %}>Taxi</option>
                                        <option value="Bus" {% if filterParams.type == 'Bus' %}selected{% endif %}>Bus</option>
                                    </select>
                                </div>

                                <!-- Reset Button -->
                                <div class="col-12 text-center mt-3">
                                    <button type="button" class="search-button" onclick="resetFilters()">
                                        <i class="fas fa-search"></i>Réinitialiser
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>



            <!-- Flash Messages -->
            {% for message in app.flashes('success') %}
                <div class="alert alert-success">{{ message }}</div>
            {% endfor %}
            {% for message in app.flashes('error') %}
                <div class="alert alert-danger">{{ message }}</div>
            {% endfor %}

            <div class="row g-4">
                {% if transports|length > 0 %}
                    {% for transport in transports %}
                        <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.{{ loop.index * 0.1 }}s">
                            <div class="service-item rounded h-100">
                                <div class="service-icon bg-transparent border rounded p-1">
                                    <div class="w-100 h-100 border rounded d-flex align-items-center justify-content-center">
                                        {% if transport.type == 'Voiture privée' %}
                                            <i class="fa fa-car fa-2x text-primary"></i>
                                        {% elseif transport.type == 'Taxi' %}
                                            <i class="fa fa-taxi fa-2x text-primary"></i>
                                        {% else %}
                                            <i class="fa fa-bus fa-2x text-primary"></i>
                                        {% endif %}
                                    </div>
                                </div>
                                <h5 class="mb-3">{{ transport.nom }}</h5>
                                <p class="text-body mb-0">
                                    Trajet: {{ transport.id_trajet.pointDepart }} → {{ transport.id_trajet.destination }}<br>
                                    Départ: {{ transport.id_trajet.dateDepart|date('d/m/Y H:i') }}<br>
                                    Durée: {{ transport.id_trajet.duree }} minutes<br>
                                    Type: {{ transport.type }}<br>
                                    Capacité: {{ transport.capacite }} places<br>
                                    Prix: {{ transport.prix|number_format(2) }} DTN<br>
                                    Contact: {{ transport.contact }}
                                </p>
                                {% if transport.imagePath %}
                                    <img src="{{ asset(transport.imagePath) }}" alt="{{ transport.nom }}" class="img-fluid rounded mt-3" style="max-height: 150px;">
                                {% else %}
                                    <img src="{{ asset('img/default-transport.jpg') }}" alt="Transport par défaut" class="img-fluid rounded mt-3" style="max-height: 150px;">
                                {% endif %}
                                <div class="service-hover-content">
                                    <p class="text-white">
                                        {{ transport.description|default('Aucune description disponible.')|length > 100 ? transport.description|slice(0, 100) ~ '...' : transport.description }}
                                    </p>
                                    <div class="d-flex justify-content-center gap-2">
                                        <a href="#"
                                           class="btn btn-primary rounded-pill reserve-btn"
                                           data-bs-toggle="modal"
                                           data-bs-target="#reservationModal"
                                           data-transport-id="{{ transport.id }}"
                                           data-transport-capacity="{{ transport.capacite }}">
                                            Réserver <i class="fa fa-ticket-alt ms-2"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                {% else %}
                    <div class="col-12 text-center">
                        <p class="text-muted">
                            Aucun transport trouvé depuis {{ departure }}.
                            <a href="{{ path('app_transports') }}">Essayez une nouvelle recherche !</a>
                        </p>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>
    <!-- Transport Search Results Section End -->

    <!-- Reservation Modal -->
    <div class="modal fade" id="reservationModal" tabindex="-1" aria-labelledby="reservationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="reservationModalLabel">Réserver ce transport</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="reservationAlert" class="alert d-none"></div>
                    <form id="reservationForm">
                        <input type="hidden" id="transportId" name="transportId">

                        <div class="mb-3">
                            <label for="reservationDate" class="form-label">Date de réservation</label>
                            <input type="date" class="form-control" id="reservationDate" name="reservationDate" required>
                            <div id="dateError" class="invalid-feedback d-none"></div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                            <button type="submit" class="btn btn-primary">Confirmer</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <style>
        .service-item {
            position: relative;
            padding: 30px;
            height: 100%;
            display: flex;
            flex-direction: column;
            background: #fff;
            box-shadow: 0 0 30px rgba(0, 0, 0, 0.05);
            transition: all 0.3s;
            border: 1px solid rgba(0, 0, 0, 0.08);
            overflow: hidden;
        }

        .service-hover-content {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 30px;
            background: var(--primary);
            color: white;
            opacity: 0;
            transition: all 0.3s;
            transform: translateY(20px);
        }

        .service-item:hover .service-hover-content {
            opacity: 1;
            transform: translateY(0);
        }

        .service-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .service-item h5 {
            color: var(--dark);
            transition: all 0.3s;
        }

        .service-item:hover h5,
        .service-item:hover .text-body {
            color: white !important;
        }

        .alert {
            margin-bottom: 20px;
            padding: 15px;
            border-radius: 5px;
        }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-danger {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        /* Custom styles for range sliders */
        .range-sliders {
            position: relative;
        }

        .form-range {
            width: 100%;
            margin-bottom: 10px;
        }

        /* Reservation Modal Styles */
        #reservationAlert.alert-success {
            color: #0f5132;
            background-color: #d1e7dd;
            border-color: #badbcc;
        }

        #reservationAlert.alert-danger {
            color: #842029;
            background-color: #f8d7da;
            border-color: #f5c2c7;
        }

        .is-invalid {
            border-color: #dc3545;
        }

        .invalid-feedback {
            color: #dc3545;
            font-size: 0.875em;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Flash messages
            {% for message in app.flashes('success') %}
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: '{{ message }}',
                showConfirmButton: false,
                timer: 3000,
                toast: true
            });
            {% endfor %}
            {% for message in app.flashes('error') %}
            Swal.fire({
                position: 'top-end',
                icon: 'error',
                title: '{{ message }}',
                showConfirmButton: false,
                timer: 3000,
                toast: true
            });
            {% endfor %}

            // Auto-submit form on input change
            const filterForm = document.getElementById('filterForm');
            const inputs = filterForm.querySelectorAll('input, select');
            inputs.forEach(input => {
                input.addEventListener('change', () => {
                    filterForm.submit();
                });
            });

            // Price range sliders
            const minPriceSlider = document.getElementById('minPriceSlider');
            const maxPriceSlider = document.getElementById('maxPriceSlider');
            const minPriceValue = document.getElementById('minPriceValue');
            const maxPriceValue = document.getElementById('maxPriceValue');
            const minPriceInput = document.getElementById('minPrice');
            const maxPriceInput = document.getElementById('maxPrice');

            minPriceSlider.addEventListener('input', () => {
                let minVal = parseInt(minPriceSlider.value);
                let maxVal = parseInt(maxPriceSlider.value);
                if (minVal > maxVal - 10) {
                    minPriceSlider.value = maxVal - 10;
                    minVal = maxVal - 10;
                }
                minPriceValue.textContent = minVal + ' DTN';
                minPriceInput.value = minVal;
            });

            maxPriceSlider.addEventListener('input', () => {
                let minVal = parseInt(minPriceSlider.value);
                let maxVal = parseInt(maxPriceSlider.value);
                if (maxVal < minVal + 10) {
                    maxPriceSlider.value = minVal + 10;
                    maxVal = minVal + 10;
                }
                maxPriceValue.textContent = maxVal + ' DTN';
                maxPriceInput.value = maxVal;
            });

            // Reset filters
            window.resetFilters = function () {
                filterForm.reset();
                minPriceSlider.value = 0;
                maxPriceSlider.value = 1000;
                minPriceValue.textContent = '0 DTN';
                maxPriceValue.textContent = '1000 DTN';
                minPriceInput.value = 0;
                maxPriceInput.value = 1000;
                filterForm.submit();
            };
        });

    </script>

    {# reservation Js #}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const reservationModal = new bootstrap.Modal(document.getElementById('reservationModal'));
            const reservationForm = document.getElementById('reservationForm');
            const reservationAlert = document.getElementById('reservationAlert');
            const dateError = document.getElementById('dateError');

            // Reset form when modal is shown
            reservationModal._element.addEventListener('show.bs.modal', function(event) {
                reservationForm.reset();
                reservationAlert.classList.add('d-none');
                dateError.classList.add('d-none');

                const button = event.relatedTarget;
                const transportId = button.getAttribute('data-transport-id');
                document.getElementById('transportId').value = transportId;

                // Set default date to tomorrow
                const tomorrow = new Date();
                tomorrow.setDate(tomorrow.getDate() + 1);
                document.getElementById('reservationDate').valueAsDate = tomorrow;
            });

            // Handle form submission
            reservationForm.addEventListener('submit', async function(e) {
                e.preventDefault();

                const formData = new FormData(this);
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalBtnText = submitBtn.innerHTML;

                try {
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> En cours...';

                    // Hide previous messages
                    reservationAlert.classList.add('d-none');
                    dateError.classList.add('d-none');

                    const response = await fetch('{{ path('app_transport_reserve') }}', {
                        method: 'POST',
                        body: formData
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Show success message
                        reservationAlert.textContent = result.message;
                        reservationAlert.classList.remove('d-none', 'alert-danger');
                        reservationAlert.classList.add('alert-success');

                        // Optionally close modal after delay
                        setTimeout(() => {
                            reservationModal.hide();
                        }, 2000);
                    } else {
                        // Show error message
                        if (result.field === 'date_reservation') {
                            dateError.textContent = result.message;
                            dateError.classList.remove('d-none');
                            document.getElementById('reservationDate').classList.add('is-invalid');
                        } else {
                            reservationAlert.textContent = result.message;
                            reservationAlert.classList.remove('d-none', 'alert-success');
                            reservationAlert.classList.add('alert-danger');
                        }
                    }
                } catch (error) {
                    reservationAlert.textContent = 'Une erreur est survenue';
                    reservationAlert.classList.remove('d-none', 'alert-success');
                    reservationAlert.classList.add('alert-danger');
                } finally {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalBtnText;
                }
            });
        });
    </script>
{% endblock %}