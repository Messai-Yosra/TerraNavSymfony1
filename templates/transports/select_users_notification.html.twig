{% extends 'baseAgenceTransport.html.twig' %}
{% block titre %}Sélectionner les destinataires{% endblock %}

{% block content %}
    <link rel="stylesheet" href="{{ asset('css/transports/CrudAgence.css') }}">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <div class="transport-booking-container">
        <section class="hero-section">
            <div class="hero-content">
                <h1>Sélectionner les destinataires</h1>
                <p>Choisissez quels utilisateurs recevront une notification concernant le transport "{{ transport.nom }}"</p>
            </div>
        </section>

        <div class="search-container">
            <h2>Sélection des clients</h2>
            
            <!-- Instructions simplifiées -->
            <div class="alert alert-info mb-4">
                <i class="fas fa-info-circle me-2"></i>
                <strong>Comment faire :</strong> Cochez les cases des clients auxquels vous souhaitez envoyer des notifications
                ou utilisez le bouton "Sélectionner" à côté d'un client pour le choisir directement.
            </div>
            
            <form action="{{ path('client_transport_send_notifications') }}" method="POST" id="notificationForm">
                <input type="hidden" name="transport_id" value="{{ transport.id }}">
                
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 50px;">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="selectAll">
                                        <label class="form-check-label" for="selectAll">Tout</label>
                                    </div>
                                </th>
                                <th>Nom</th>
                                <th>Prénom</th>
                                <th>Email</th>
                                <th style="width: 120px;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% set clientCount = 0 %}
                            {% for user in users %}
                                {% if user.role == 'Client' %}
                                    {% set clientCount = clientCount + 1 %}
                                    <tr class="user-row" data-user-id="{{ user.id }}">
                                        <td>
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input user-checkbox" 
                                                       name="selected_users[]" 
                                                       value="{{ user.id }}" 
                                                       id="user-{{ user.id }}">
                                            </div>
                                        </td>
                                        <td>{{ user.nom }}</td>
                                        <td>{{ user.prenom }}</td>
                                        <td>{{ user.email }}</td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-primary select-btn" onclick="selectSingleUser({{ user.id }})">
                                                <i class="fas fa-user-check"></i> Sélectionner
                                            </button>
                                        </td>
                                    </tr>
                                {% endif %}
                            {% else %}
                                <tr>
                                    <td colspan="5" class="text-center py-4">
                                        <div class="alert alert-warning mb-0">
                                            <i class="fas fa-exclamation-triangle me-2"></i>
                                            Aucun client disponible
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                            
                            {% if clientCount == 0 and users|length > 0 %}
                                <tr>
                                    <td colspan="5" class="text-center py-4">
                                        <div class="alert alert-warning mb-0">
                                            <i class="fas fa-exclamation-triangle me-2"></i>
                                            Aucun utilisateur avec le rôle "Client" n'est disponible
                                        </div>
                                    </td>
                                </tr>
                            {% endif %}
                        </tbody>
                    </table>
                </div>

                <div id="selectedUsersCounter" class="alert alert-success mt-3">
                    <strong><i class="fas fa-users me-2"></i><span id="userCount">0</span> client(s) sélectionné(s)</strong>
                </div>

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary btn-lg" id="submitBtn">
                        <i class="fas fa-paper-plane me-2"></i>Envoyer les notifications
                    </button>
                    <a href="{{ path('client_transports_list') }}" class="btn btn-secondary btn-lg">
                        <i class="fas fa-arrow-left me-2"></i>Retour
                    </a>
                </div>
            </form>
        </div>
    </div>

    <style>
        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }
        
        .table-responsive {
            margin: 20px 0;
            border-radius: 8px;
            border: 1px solid #dee2e6;
        }
        
        .user-row.selected {
            background-color: rgba(25, 135, 84, 0.15);
        }
        
        .badge {
            font-size: 0.8rem;
            padding: 0.35em 0.65em;
        }
        
        #selectedUsersCounter {
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .select-btn {
            width: 100%;
        }
        
        /* Animation pour mettre en évidence la sélection */
        @keyframes highlight {
            0% { background-color: rgba(25, 135, 84, 0.15); }
            50% { background-color: rgba(25, 135, 84, 0.3); }
            100% { background-color: rgba(25, 135, 84, 0.15); }
        }
        
        .highlight-animation {
            animation: highlight 1s ease;
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    
    <script>
        // Fonction pour sélectionner un seul utilisateur (sera appelée directement par le bouton)
        function selectSingleUser(userId) {
            // Désélectionner tous les utilisateurs
            document.querySelectorAll('.user-checkbox').forEach(function(checkbox) {
                checkbox.checked = false;
                checkbox.closest('tr').classList.remove('selected');
            });
            
            // Sélectionner l'utilisateur spécifique
            const checkbox = document.getElementById('user-' + userId);
            if (checkbox) {
                checkbox.checked = true;
                const row = checkbox.closest('tr');
                row.classList.add('selected');
                row.classList.add('highlight-animation');
                
                // Mettre à jour le compteur
                updateCounter();
                
                // Afficher un message de confirmation
                alert('Client sélectionné avec succès !');
            }
        }
    
        // Attendre que le DOM soit chargé
        document.addEventListener('DOMContentLoaded', function() {
            // Fonction pour mettre à jour le compteur
            window.updateCounter = function() {
                const count = document.querySelectorAll('.user-checkbox:checked').length;
                document.getElementById('userCount').textContent = count;
            };
            
            // Mise en évidence des lignes sélectionnées
            document.querySelectorAll('.user-checkbox').forEach(function(checkbox) {
                // Style initial
                if (checkbox.checked) {
                    checkbox.closest('tr').classList.add('selected');
                }
                
                // Lorsqu'une case est cochée/décochée
                checkbox.addEventListener('change', function() {
                    if (this.checked) {
                        this.closest('tr').classList.add('selected');
                    } else {
                        this.closest('tr').classList.remove('selected');
                    }
                    updateCounter();
                });
            });
            
            // Tout sélectionner / désélectionner
            const selectAllCheckbox = document.getElementById('selectAll');
            if (selectAllCheckbox) {
                selectAllCheckbox.addEventListener('change', function() {
                    const checkboxes = document.querySelectorAll('.user-checkbox');
                    checkboxes.forEach(function(checkbox) {
                        const row = checkbox.closest('tr');
                        checkbox.checked = selectAllCheckbox.checked;
                        if (checkbox.checked) {
                            row.classList.add('selected');
                        } else {
                            row.classList.remove('selected');
                        }
                    });
                    updateCounter();
                });
            }
            
            // Vérifier qu'au moins un utilisateur est sélectionné avant la soumission
            const form = document.getElementById('notificationForm');
            const submitBtn = document.getElementById('submitBtn');
            
            if (form) {
                form.addEventListener('submit', function(e) {
                    const checkedBoxes = document.querySelectorAll('.user-checkbox:checked');
                    
                    if (checkedBoxes.length === 0) {
                        e.preventDefault();
                        alert('Veuillez sélectionner au moins un destinataire.');
                    } else {
                        // Indication visuelle que la soumission est en cours
                        if (submitBtn) {
                            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Envoi en cours...';
                            submitBtn.disabled = true;
                        }
                    }
                });
            }
            
            // Permettre la sélection en cliquant sur la ligne
            document.querySelectorAll('.user-row').forEach(function(row) {
                row.addEventListener('click', function(e) {
                    // Ne pas exécuter si on clique sur un bouton ou une case à cocher
                    if (e.target.type !== 'checkbox' && !e.target.closest('button')) {
                        const checkbox = this.querySelector('.user-checkbox');
                        checkbox.checked = !checkbox.checked;
                        
                        if (checkbox.checked) {
                            this.classList.add('selected');
                        } else {
                            this.classList.remove('selected');
                        }
                        
                        updateCounter();
                    }
                });
            });
            
            // Initialiser le compteur
            updateCounter();
        });
    </script>
{% endblock %}