{% extends 'baseClient.html.twig' %}

{% block titre %}Chat - Posts{% endblock %}

{% block content %}
    <!-- CSS et JS pour les emojis -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/emoji-toolkit@7.0.0/extras/css/joypixels.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="{{ asset('css/styleClient.css') }}">
    <link rel="stylesheet" href="{{ asset('css/interactions/interactions.css') }}">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <div class="container mt-3 fade-in">
        {# Stories Section #}
        <div class="stories-container mb-4">
            {# Add Story Button #}
            <div class="story-item add-story">
                <a href="{{ path('app_story_new') }}" class="add-story-content">
                    <div class="add-story-wrapper">
                        {% if app.user and app.user.photo %}
                            <img src="{{ asset('uploads/profile/' ~ app.user.photo) }}" 
                                 alt="Your profile" 
                                 class="story-create-avatar">
                        {% else %}
                            <div class="add-story-icon">
                                <i class="fas fa-plus"></i>
                            </div>
                        {% endif %}
                        <div class="add-story-text">Créer une story</div>
                    </div>
                </a>
            </div>

            {# Stories display section #}
            {% if activeStories is defined and activeStories is not empty %}
                {% for story in activeStories %}
                    <div class="story-item" 
                         data-story-id="{{ story.id }}"
                         data-created-at="{{ story.createdAt|date('Y-m-d H:i:s') }}"
                         onclick="viewStory('{{ story.id }}')">
                        <div class="story-content">
                            {% if story.media %}
                                <img src="{{ asset('uploads/stories/' ~ story.media) }}" 
                                     alt="Story media" 
                                     class="story-media">
                            {% endif %}
                            <div class="story-overlay"></div>
                            <div class="story-user-info">
                                <img src="{{ story.idUser.photo ? asset('uploads/profile/' ~ story.idUser.photo) : asset('img/default-avatar.jpg') }}"
                                     alt="{{ story.idUser.username }}"
                                     class="story-avatar">
                                <span class="story-username">{{ story.idUser.username }}</span>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            {% endif %}
        </div>

        {# Post Creation Card #}
        <div class="card mb-4 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <img src="{{ app.user and app.user.photo ? asset('uploads/profile/' ~ app.user.photo) : asset('img/default-avatar.jpg') }}"
                         class="rounded-circle me-3"
                         width="40"
                         height="40"
                         alt="Profile picture">
                    <a href="{{ path('app_post_new') }}" class="btn btn-light w-100 text-start post-create-btn">
                        <span class="text-muted">Quoi de neuf, {{ app.user ? app.user.username : 'visiteur' }} ?</span>
                    </a>
                </div>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="filters-section mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text bg-primary text-white">
                                    <i class="fas fa-search"></i>
                                </span>
                                <input type="text" 
                                       id="searchInput" 
                                       class="form-control" 
                                       placeholder="Rechercher une publication..."
                                       autocomplete="off">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text bg-primary text-white">
                                    <i class="fas fa-sort"></i>
                                </span>
                                <select id="sortSelect" class="form-select">
                                    <option value="newest">Plus récent</option>
                                    <option value="oldest">Plus ancien</option>
                                    <option value="most-liked">Plus aimés</option>
                                    <option value="most-commented">Plus commentés</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Indicator -->
        <div id="loadingIndicator" class="text-center py-4" style="display:none;">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Chargement...</span>
            </div>
        </div>

        {% set currentPage = currentPage is defined ? currentPage : 1 %}
        {% set totalPages = totalPages is defined ? totalPages : 1 %}

        {% if posts is not empty %}
            <div id="postsContainer">
                {% for post in posts %}
                    {% if post.statut == 'traitée' %}
                        <div class="card mb-4 shadow-hover post-item"
                             data-description="{{ post.description|lower }}"
                             data-date="{{ post.date ? post.date|date('Y-m-d H:i:s') : '' }}"
                             data-comments="{{ post.nbCommentaires }}"
                             data-likes="{{ post.nbReactions }}"  {# Assurez-vous que cette valeur est correcte #}
                             data-id="{{ post.id }}">
                            <!-- Post Header -->
                            <div class="card-header bg-white border-0 py-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        <img src="{{ post.id_user.photo ? asset('uploads/profile/' ~ post.id_user.photo) : asset('img/default-avatar.jpg') }}"
                                             class="rounded-circle me-2"
                                             width="40"
                                             height="40"
                                             alt="{{ post.id_user.username }} profile">
                                        <div>
                                            <h6 class="mb-0">
                                                <a href="#" class="text-dark fw-bold text-decoration-none hover-primary">
                                                    {{ post.id_user.username }}
                                                </a>
                                            </h6>
                                            <div class="text-muted fs-12">
                                                <span title="{{ post.date|date('d/m/Y H:i') }}">
                                                    {{ post.date ? post.date|date('d M à H:i') : 'Non défini' }}
                                                </span>
                                                · <i class="fas fa-globe-americas"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="dropdown">
                                        <button class="btn btn-icon" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-h"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            {% if app.user and app.user.id == post.id_user.id %}
                                                <li>
                                                    <a class="dropdown-item" href="{{ path('app_post_edit', {'id': post.id}) }}">
                                                        <i class="fas fa-edit me-2 text-primary"></i> Modifier
                                                    </a>
                                                </li>
                                                <li>
                                                    <button class="dropdown-item text-danger delete-btn"
                                                            data-delete-url="{{ path('app_post_delete', {'id': post.id}) }}"
                                                            data-post-title="{{ post.description|slice(0, 30) }}...">
                                                        <i class="fas fa-trash-alt me-2"></i> Supprimer
                                                    </button>
                                                </li>
                                                <li><hr class="dropdown-divider"></li>
                                            {% endif %}
                                            <li>
                                                <a class="dropdown-item" href="{{ path('app_post_details', {'id': post.id}) }}">
                                                    <i class="fas fa-eye me-2"></i> Voir les détails
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            <!-- Post Content -->
                            <div class="card-body pt-0 pb-2">
                                <p class="card-text mb-3 emoji-content">{{ post.description|raw }}</p>
                                {% if post.image %}
                                    <div class="post-media mb-3">
                                        <img src="{{ asset('img/' ~ post.image) }}"
                                             loading="lazy"
                                             class="img-fluid rounded w-100"
                                             alt="Image du post">
                                    </div>
                                {% endif %}
                            </div>

                            <!-- Post Stats -->
                            <div class="card-footer bg-white border-top-0 pt-0">
                                <div class="d-flex align-items-center py-2 border-bottom">
                                    <div class="d-flex align-items-center">
                                        <span class="reactions-icon">
                                            <i class="fas fa-thumbs-up"></i>
                                        </span>
                                        <span class="ms-2 text-muted fs-14 like-count-{{ post.id }}">
                                            {{ post.nbReactions }}
                                        </span>
                                    </div>
                                    <div class="ms-auto">
                                        <a href="{{ path('app_post_details', {'id': post.id}) }}" class="text-muted text-decoration-none fs-14">
                                            {{ post.nbCommentaires }} commentaire{% if post.nbCommentaires > 1 %}s{% endif %}
                                        </a>
                                    </div>
                                </div>

                                <!-- Post Actions -->
                                <div class="d-flex justify-content-around py-2">
                                    {% set isLiked = false %}
                                    {% if app.user %}
                                        {% set isLiked = post.reactions|filter(r => r.idUser.id == app.user.id)|length > 0 %}
                                    {% endif %}

                                    <button class="btn-action like-btn {{ isLiked ? 'liked' : '' }}"
                                            data-post-id="{{ post.id }}"
                                            data-like-url="{{ path('app_post_like', {'id': post.id}) }}">
                                        <i class="fa{{ isLiked ? 's' : 'r' }} fa-thumbs-up me-2"></i>
                                        J'aime
                                    </button>

                                    <a href="{{ path('app_post_details', {'id': post.id}) }}" class="btn-action">
                                        <i class="far fa-comment-alt me-2"></i>
                                        Commenter
                                    </a>

                                    <!-- Remplacez le bouton partager existant par celui-ci -->
<button class="btn-action share-btn" 
        data-post-id="{{ post.id }}"
        data-post-url="{{ url('app_post_details', {'id': post.id}) }}"
        data-post-title="{{ post.description|striptags|slice(0, 100) }}..."
        onclick="sharePost(this)">
    <i class="fas fa-share me-2"></i>
    Partager
</button>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-center mt-4">
                <nav>
                    <ul class="pagination">
                        {% if currentPage > 1 %}
                            <li class="page-item">
                                <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': currentPage - 1})) }}">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                            </li>
                        {% endif %}
                        {% for page in 1..totalPages %}
                            <li class="page-item {{ page == currentPage ? 'active' : '' }}">
                                <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': page})) }}">
                                    {{ page }}
                                </a>
                            </li>
                        {% endfor %}
                        {% if currentPage < totalPages %}
                            <li class="page-item">
                                <a class="page-link" href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': currentPage + 1})) }}">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        {% endif %}
                    </ul>
                </nav>
            </div>
        {% else %}
            <div class="card shadow-sm border-0">
                <div class="card-body text-center py-5">
                    <i class="far fa-newspaper fa-4x text-muted mb-3"></i>
                    <h4 class="text-muted">Aucune publication traitée disponible</h4>
                    <p class="text-muted mb-4">Les publications seront affichées ici une fois traitées par nos modérateurs.</p>
                    <a href="{{ path('app_post_new') }}" class="btn btn-primary btn-lg">
                        <i class="fas fa-plus-circle me-2"></i> Créer une nouvelle publication
                    </a>
                </div>
            </div>
        {% endif %}
    </div>

    <!-- Story Modal -->
    <div id="storyModal" class="story-modal">
        <div class="story-modal-content">
            <button class="story-nav-btn prev-btn">
                <i class="fas fa-chevron-left"></i>
            </button>
            <button class="story-nav-btn next-btn">
                <i class="fas fa-chevron-right"></i>
            </button>
            <button class="close-modal">
                <i class="fas fa-times"></i>
            </button>
            <div class="story-view">
                <div class="story-header">
                    <div class="story-user-info">
                        <img id="modalUserAvatar" src="" alt="User avatar">
                        <div class="story-user-details">
                            <span id="modalUsername"></span>
                            <small id="modalTimestamp"></small>
                        </div>
                    </div>
                </div>
                <div class="story-media-container">
                    <img id="modalStoryImage" src="" alt="Story">
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/emoji-toolkit@7.0.0/lib/js/joypixels.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser JoyPixels pour la conversion des emojis
            joypixels.init({
                img: false, // Utiliser les emojis natifs
                convertShortnames: true,
                convertUnicode: true
            });

            function convertEmojis() {
                document.querySelectorAll('.emoji-content').forEach(element => {
                    element.innerHTML = joypixels.toImage(element.innerHTML);
                });
            }
            
            // Convertir les emojis dans les contenus marqués
            convertEmojis();
            
            // Stories functionality
            const storyModal = document.getElementById('storyModal');
            const modalImg = document.getElementById('modalStoryImage');
            const modalAvatar = document.getElementById('modalUserAvatar');
            const modalUsername = document.getElementById('modalUsername');
            const modalTimestamp = document.getElementById('modalTimestamp');
            const prevBtn = document.querySelector('.prev-btn');
            const nextBtn = document.querySelector('.next-btn');
            const closeBtn = document.querySelector('.close-modal');
            let currentStoryIndex = 0;
            let stories = [];
        
            // Posts functionality
            const searchInput = document.getElementById('searchInput');
            const sortSelect = document.getElementById('sortSelect');
            const postsContainer = document.getElementById('postsContainer');
            let posts = document.querySelectorAll('.post-item');
            let postsArray = Array.from(posts);
        
            // Debounce function
            function debounce(func, wait) {
                let timeout;
                return function() {
                    const context = this;
                    const args = arguments;
                    clearTimeout(timeout);
                    timeout = setTimeout(() => {
                        func.apply(context, args);
                    }, wait);
                };
            }
        
            // Story viewing function
            window.viewStory = function(storyId) {
                stories = Array.from(document.querySelectorAll('.story-item:not(.add-story)'));
                currentStoryIndex = stories.findIndex(story => story.dataset.storyId === storyId);
                showStory(currentStoryIndex);
                storyModal.style.display = 'block';
                document.body.style.overflow = 'hidden';
            };
        
            function showStory(index) {
                const story = stories[index];
                const storyMedia = story.querySelector('.story-media');
                const storyAvatar = story.querySelector('.story-avatar');
                const storyUsername = story.querySelector('.story-username');
                const createdAt = new Date(story.dataset.createdAt);
                const now = new Date();
                
                modalImg.src = storyMedia.src;
                modalAvatar.src = storyAvatar.src;
                modalUsername.textContent = storyUsername.textContent;
                
                // Calcul de la différence de temps
                const diffInSeconds = Math.floor((now - createdAt) / 1000);
                const diffInMinutes = Math.floor(diffInSeconds / 60);
                const diffInHours = Math.floor(diffInMinutes / 60);
                const diffInDays = Math.floor(diffInHours / 24);
                
                // Formater le texte selon la différence de temps
                let timeText;
                if (diffInDays > 0) {
                    timeText = `Il y a ${diffInDays} jour${diffInDays > 1 ? 's' : ''}`;
                } else if (diffInHours > 0) {
                    timeText = `Il y a ${diffInHours}h`;
                } else if (diffInMinutes > 0) {
                    timeText = `Il y a ${diffInMinutes} min`;
                } else {
                    timeText = 'À l\'instant';
                }
                
                modalTimestamp.textContent = timeText;
                
                // Update navigation buttons
                prevBtn.style.display = index > 0 ? 'block' : 'none';
                nextBtn.style.display = index < stories.length - 1 ? 'block' : 'none';

                updateProgressBar(index);
            }
        
            // Story navigation
            prevBtn.onclick = function(e) {
                e.stopPropagation();
                if (currentStoryIndex > 0) {
                    currentStoryIndex--;
                    showStory(currentStoryIndex);
                }
            };
        
            nextBtn.onclick = function(e) {
                e.stopPropagation();
                if (currentStoryIndex < stories.length - 1) {
                    currentStoryIndex++;
                    showStory(currentStoryIndex);
                }
            };
        
            closeBtn.onclick = function() {
                storyModal.style.display = 'none';
                document.body.style.overflow = 'auto';
            };
        
            // Posts filtering function
            function filterAndSortPosts() {
                const searchTerm = searchInput.value.toLowerCase().trim();
                const sortType = sortSelect.value;
                document.getElementById('loadingIndicator').style.display = 'block';

                // Récupérer tous les posts
                let filteredPosts = Array.from(document.querySelectorAll('.post-item'));
                
                // Filtrer par terme de recherche
                if (searchTerm) {
                    filteredPosts = filteredPosts.filter(post => {
                        const description = post.querySelector('.card-text').textContent.toLowerCase();
                        const username = post.querySelector('.fw-bold').textContent.toLowerCase();
                        return description.includes(searchTerm) || username.includes(searchTerm);
                    });
                }

                // Trier les posts
                filteredPosts.sort((a, b) => {
                    switch(sortType) {
                        case 'newest':
                            return new Date(b.dataset.date) - new Date(a.dataset.date);
                        case 'oldest':
                            return new Date(a.dataset.date) - new Date(b.dataset.date);
                        case 'most-liked':
                            // Conversion explicite en nombre pour le tri
                            return parseInt(b.dataset.likes || 0) - parseInt(a.dataset.likes || 0);
                        case 'most-commented':
                            return parseInt(b.dataset.comments || 0) - parseInt(a.dataset.comments || 0);
                        default:
                            return 0;
                    }
                });

                // Mettre à jour l'affichage
                const postsContainer = document.getElementById('postsContainer');
                postsContainer.innerHTML = '';

                if (filteredPosts.length === 0) {
                    postsContainer.innerHTML = `
                        <div class="alert alert-info text-center my-4">
                            <i class="fas fa-info-circle me-2"></i>
                            Aucune publication ne correspond à votre recherche
                        </div>`;
                } else {
                    filteredPosts.forEach(post => {
                        const clone = post.cloneNode(true);
                        postsContainer.appendChild(clone);
                    });
                }

                document.getElementById('loadingIndicator').style.display = 'none';
                convertEmojis();
                initializePostInteractions();
            }
        
            // Initialize post interactions
            function initializePostInteractions() {
                document.querySelectorAll('.like-btn').forEach(button => {
                    button.removeEventListener('click', handleLikeClick);
                    button.addEventListener('click', handleLikeClick);
                });
            }

            function handleLikeClick() {
                const button = this;
                const postId = button.dataset.postId;
                const likeUrl = button.dataset.likeUrl;
                const icon = button.querySelector('i');
                const likeCountElement = document.querySelector(`.like-count-${postId}`);

                fetch(likeUrl, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        if (response.status === 403) {
                            window.location.href = '{{ path("app_login") }}';
                            return;
                        }
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        // Mise à jour du compteur
                        likeCountElement.textContent = data.likes;
                        
                        // Mise à jour de l'apparence du bouton
                        if (data.isLiked) {
                            icon.classList.remove('far');
                            icon.classList.add('fas');
                            button.classList.remove('btn-light');
                            button.classList.add('btn-primary');
                        } else {
                            icon.classList.remove('fas');
                            icon.classList.add('far');
                            button.classList.remove('btn-primary');
                            button.classList.add('btn-light');
                        }

                        // Animation
                        likeCountElement.classList.add('like-animation');
                        setTimeout(() => {
                            likeCountElement.classList.remove('like-animation');
                        }, 300);
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Une erreur est survenue',
                        timer: 2000,
                        showConfirmButton: false
                    });
                });
            }

            // Event listeners
            searchInput.addEventListener('input', debounce(() => {
    const searchTerm = searchInput.value.trim().toLowerCase();
    const originalPosts = Array.from(document.querySelectorAll('.post-item'));
    
    // Store original posts if not already stored
    if (!window.originalPosts) {
        window.originalPosts = originalPosts.map(post => post.cloneNode(true));
    }

    // If search is empty, restore all original posts
    if (searchTerm === '') {
        postsContainer.innerHTML = '';
        window.originalPosts.forEach(post => {
            const clone = post.cloneNode(true);
            postsContainer.appendChild(clone);
        });
    } else {
        // Filter posts based on search term
        const filteredPosts = window.originalPosts.filter(post => {
            const description = post.querySelector('.card-text').textContent.toLowerCase();
            const username = post.querySelector('.fw-bold').textContent.toLowerCase();
            return description.includes(searchTerm) || username.includes(searchTerm);
        });

        // Update posts container
        postsContainer.innerHTML = '';
        if (filteredPosts.length === 0) {
            postsContainer.innerHTML = `
                <div class="alert alert-info text-center my-4">
                    <i class="fas fa-info-circle me-2"></i>
                    Aucune publication ne correspond à votre recherche
                </div>`;
        } else {
            filteredPosts.forEach(post => {
                const clone = post.cloneNode(true);
                postsContainer.appendChild(clone);
            });
        }
    }

    // Reinitialize interactions and convert emojis
    convertEmojis();
    initializePostInteractions();
}, 300));
            sortSelect.addEventListener('change', filterAndSortPosts);
        
            // Keyboard navigation for stories
            document.addEventListener('keydown', function(e) {
                if (storyModal.style.display === 'block') {
                    if (e.key === 'ArrowLeft') prevBtn.click();
                    if (e.key === 'ArrowRight') nextBtn.click();
                    if (e.key === 'Escape') closeBtn.click();
                }
            });
        
            // Initial initialization
            initializePostInteractions();
        
            // Progress bar for stories
            function updateProgressBar(index) {
                const progressContainer = document.querySelector('.story-progress') || createProgressContainer();
                progressContainer.innerHTML = '';
                
                stories.forEach((_, i) => {
                    const bar = document.createElement('div');
                    bar.className = `progress-bar ${i === index ? 'active' : i < index ? 'completed' : ''}`;
                    progressContainer.appendChild(bar);
                });
            }
        
            function createProgressContainer() {
                const container = document.createElement('div');
                container.className = 'story-progress';
                document.querySelector('.story-header').prepend(container);
                return container;
            }
        });
        // Ajoutez ces fonctions dans votre bloc script existant, avant le dernier });
function sharePost(button) {
    const postUrl = button.dataset.postUrl;
    const postTitle = button.dataset.postTitle;

    // Vérifier si l'API Web Share est disponible
    if (navigator.share) {
        navigator.share({
            title: 'TerraNav - Publication',
            text: postTitle,
            url: postUrl
        })
        .then(() => {
            showSuccessMessage('Publication partagée avec succès!');
        })
        .catch(error => {
            if (error.name !== 'AbortError') {
                showShareModal(postUrl);
            }
        });
    } else {
        // Fallback pour les navigateurs qui ne supportent pas l'API Web Share
        showShareModal(postUrl);
    }
}

function showShareModal(postUrl) {
    Swal.fire({
        title: 'Partager la publication',
        html: `
            <div class="share-options">
                <button class="btn btn-primary mb-3 w-100" onclick="copyToClipboard('${postUrl}')">
                    <i class="far fa-copy me-2"></i>Copier le lien
                </button>
                <div class="d-flex justify-content-between mt-3">
                    <a href="https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(postUrl)}" 
                       class="btn btn-outline-primary share-btn-social" 
                       target="_blank">
                        <i class="fab fa-facebook-f"></i>
                    </a>
                    <a href="https://twitter.com/intent/tweet?url=${encodeURIComponent(postUrl)}" 
                       class="btn btn-outline-info share-btn-social" 
                       target="_blank">
                        <i class="fab fa-twitter"></i>
                    </a>
                    <a href="https://api.whatsapp.com/send?text=${encodeURIComponent(postUrl)}" 
                       class="btn btn-outline-success share-btn-social" 
                       target="_blank">
                        <i class="fab fa-whatsapp"></i>
                    </a>
                    <a href="mailto:?body=${encodeURIComponent(postUrl)}" 
                       class="btn btn-outline-secondary share-btn-social">
                        <i class="far fa-envelope"></i>
                    </a>
                </div>
            </div>
        `,
        showConfirmButton: false,
        showCloseButton: true
    });
}

function copyToClipboard(text) {
    navigator.clipboard.writeText(text)
        .then(() => {
            showSuccessMessage('Lien copié dans le presse-papiers!');
        })
        .catch(() => {
            showErrorMessage('Erreur lors de la copie du lien');
        });
}

function showSuccessMessage(message) {
    Swal.fire({
        icon: 'success',
        title: 'Succès!',
        text: message,
        timer: 2000,
        showConfirmButton: false
    });
}

function showErrorMessage(message) {
    Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: message,
        timer: 2000,
        showConfirmButton: false
    });
}
    </script>

    <style>
        .post-create-btn {
    border-radius: 20px;
    padding: 10px 15px;
    transition: background-color 0.2s;
    text-decoration: none;
    color: #65676b;
}

.post-create-btn:hover {
    background-color: #f0f2f5;
    color: #1877f2;
}
.goog-te-gadget-simple {
    background-color: transparent !important;
    border: 1px solid #dee2e6 !important;
    padding: 8px !important;
    border-radius: 4px !important;
    display: inline-flex !important;
    align-items: center !important;
}

.goog-te-gadget-simple img {
    display: none !important;
}

.goog-te-menu-value {
    color: #1877f2 !important;
    display: flex !important;
    align-items: center !important;
}

.goog-te-menu-value span {
    border: none !important;
    font-family: inherit !important;
}

.goog-te-menu-value span:first-child {
    font-weight: 500;
}

/* Masquer le bandeau supérieur de Google Translate */
.goog-te-banner-frame {
    display: none !important;
}

body {
    top: 0 !important;
}
        .stories-container {
            display: flex;
            overflow-x: auto;
            gap: 8px;
            padding: 16px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }
        
        .story-item {
            flex: 0 0 120px;
            height: 200px;
            border-radius: 8px;
            overflow: hidden;
            position: relative;
            cursor: pointer;
            background: #f0f2f5;
            transition: transform 0.2s;
        }
        
        .add-story {
            border: 2px dashed #1877f2;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
        }
        
        .add-story-wrapper {
            padding: 16px;
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100%;
            justify-content: center;
        }
        
        .story-create-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: 4px solid #1877f2;
            margin-bottom: 12px;
        }
        
        .add-story-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: #1877f2;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            margin-bottom: 12px;
        }
        
        .add-story-text {
            color: #1877f2;
            font-weight: 600;
            font-size: 14px;
        }
        
        .story-content {
            height: 100%;
            position: relative;
        }
        
        .story-media {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .story-overlay {
            position: absolute;
            inset: 0;
            background: linear-gradient(
                to bottom,
                rgba(0,0,0,0.1) 0%,
                rgba(0,0,0,0.5) 100%
            );
        }
        
        .story-user-info {
            position: absolute;
            bottom: 12px;
            left: 0;
            right: 0;
            padding: 0 8px;
            text-align: center;
        }
        
        .story-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: 7px solid #1877f2;
            margin-bottom: 16px;
        }
        
        .story-username {
            color: white;
            font-size: 12px;
            font-weight: 600;
            text-shadow: 0 1px 2px rgba(0,0,0,0.5);
            display: block;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .story-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.95);
            z-index: 1000;
            backdrop-filter: blur(10px);
        }
        
        .story-modal-content {
            position: relative;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .story-view {
            position: relative;
            width: 100%;
            max-width: 500px;
            height: 90vh;
            background: #000;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 0 30px rgba(0,0,0,0.5);
        }
        
        .story-header {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            padding: 16px;
            background: linear-gradient(to bottom, rgba(0,0,0,0.7), transparent);
            z-index: 2;
        }
        
        .story-user-info {
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .story-user-info img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border: 2px solid #fff;
        }
        
        .story-user-details {
            color: #fff;
        }
        
        .story-user-details span {
            display: block;
            font-weight: 600;
            font-size: 14px;
        }
        
        .story-user-details small {
            color: rgba(255,255,255,0.8);
        }
        
        .story-media-container {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .story-media-container img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
        }
        
        .story-nav-btn {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255,255,255,0.2);
            border: none;
            color: #fff;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .prev-btn {
            left: 20px;
        }
        
        .next-btn {
            right: 20px;
        }
        
        .close-modal {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(255,255,255,0.2);
            border: none;
            color: #fff;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .story-nav-btn:hover,
        .close-modal:hover {
            background: rgba(255,255,255,0.3);
        }
        
        .story-progress {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            display: flex;
            gap: 4px;
            padding: 8px;
            z-index: 3;
        }
        
        .progress-bar {
            height: 3px;
            flex: 1;
            background: rgba(255,255,255,0.3);
            border-radius: 2px;
        }
        
        .progress-bar.active {
            background: white;
            animation: progress 5s linear;
        }
        
        .progress-bar.completed {
            background: white;
        }
        
        @keyframes progress {
            from { width: 0; }
            to { width: 100%; }
        }
        
        /* Emoji styles */
        .emoji-content img.joypixels {
            height: 1.2em;
            width: 1.2em;
            margin: 0 .05em 0 .1em;
            vertical-align: -0.25em;
        }
.btn-action {
    background: transparent;
    border: none;
    padding: 8px 12px;
    font-weight: 600;
    color: #65676b;
    font-size: 0.9rem;
    transition: color 0.2s ease;
    display: inline-flex;
    align-items: center;
    gap: 6px;
    border-radius: 6px;
    width: auto;
    min-width: 100px;
    justify-content: center;
}

.btn-action:hover {
    background-color: #f0f2f5;
    transform: none;
    scale: none;
}

.btn-action.liked {
    color: #1877f2;
}

.btn-action.liked i {
    color: #1877f2;
}

.btn-action i {
    font-size: 1.1rem;
    transition: color 0.2s ease;
}

/* Modifiez l'animation pour n'affecter que l'icône */
.like-animation i {
    animation: likeIconPulse 0.3s ease-in-out;
}

@keyframes likeIconPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

.reactions-count {
    color: #65676b;
    font-size: 0.9rem;
}
/* Ajoutez ces styles dans votre section style */
.share-options {
    padding: 15px;
}

.share-btn-social {
    width: 45px;
    height: 45px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}

.share-btn-social:hover {
    transform: translateY(-2px);
}

.btn-outline-primary:hover { background-color: #1877f2; color: white; }
.btn-outline-info:hover { background-color: #1da1f2; color: white; }
.btn-outline-success:hover { background-color: #25d366; color: white; }
.btn-outline-secondary:hover { background-color: #6c757d; color: white; }
    </style>
{% endblock %}