{% extends "baseClient.html.twig" %}
{% block titre %}Ajouter un nouveau post{% endblock %}

{% block content %}
    <link rel="stylesheet" href="{{ asset('css/styleClient.css') }}">
    <link rel="stylesheet" href="{{ asset('css/interactions/interactions.css') }}">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"><script src="https://cdn.jsdelivr.net/npm/emoji-toolkit@7.0.0/lib/js/joypixels.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/emoji-toolkit@7.0.0/extras/css/joypixels.min.css">
    <style>
        .is-invalid {
            border-color: #dc3545 !important;
        }
        .invalid-feedback {
            color: #dc3545;
            font-size: 0.875em;
        }
        #generateDescription {
            background-color: #4e73df;
            color: white;
            border: none;
            transition: all 0.3s;
        }
        #generateDescription:hover {
            background-color: #2e59d9;
            transform: translateY(-2px);
        }
        #generateDescription:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }
        .spinner {
            display: inline-block;
            width: 1rem;
            height: 1rem;
            vertical-align: middle;
            border: 0.2em solid currentColor;
            border-right-color: transparent;
            border-radius: 50%;
            animation: spinner 0.75s linear infinite;
        }
        @keyframes spinner {
            to { transform: rotate(360deg); }
        }
    </style>

    <div class="form-container">
        <h1>üìù Ajouter un nouveau post</h1>

        <div class="card">
            {{ form_start(form, {'attr': {'id': 'postForm', 'novalidate': 'novalidate'}}) }}
            
            <div class="form-group mb-3">
                {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                <div class="input-group">
                    {{ form_widget(form.description, {'attr': {
                        'class': 'form-control',
                        'rows': 4,
                        'placeholder': 'D√©crivez votre post...'
                    }}) }}
                </div>
                <button type="button" id="generateDescription" class="btn btn-primary mt-2">
                    <i class="fas fa-magic me-1"></i> G√©n√©rer une description avec IA
                </button>
                <div class="invalid-feedback description-error"></div>
                {% if form.description.vars.errors is not empty %}
                    <div class="alert alert-danger">
                        {{ form_errors(form.description) }}
                    </div>
                {% endif %}
            </div>

            <div class="form-group mb-3">
                {{ form_label(form.image, 'Image', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.image, {'attr': {'class': 'form-control'}}) }}
                {% if form.image.vars.errors is not empty %}
                    <div class="alert alert-danger">
                        {{ form_errors(form.image) }}
                    </div>
                {% endif %}
            </div>

            <button type="submit" class="btn btn-primary">
                <i class="fas fa-plus-circle"></i> Publier le post
            </button>
            {{ form_end(form) }}
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const generateButton = document.getElementById('generateDescription');
        const descriptionInput = document.getElementById('add_post_form_description');

        generateButton.addEventListener('click', function() {
            // R√©cup√©rer le contenu actuel du textarea
            const currentContent = descriptionInput.value;

            fetch("{{ path('post_generate_description') }}", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    context: currentContent || 'Post social', // Utiliser le contenu du textarea
                    type: 'general',
                    style: 'convivial'
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    descriptionInput.value = data.content;
                } else {
                    console.error('Erreur:', data.message);
                }
            })
            .catch(error => console.error('Erreur:', error));
        });
    });
    </script>
{% endblock %}