# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    chambre_images_directory: '%kernel.project_dir%/public/ChambreImages'
    profile_photos_directory: '%kernel.project_dir%/public/uploads/profile'
    uploads_directory: '%kernel.project_dir%/public/img'
    env(STRIPE_PUBLIC_KEY): ~
    env(STRIPE_SECRET_KEY): ~
    amadeus.api.key: '%env(AMADEUS_API_KEY)%'
    amadeus.api.secret: '%env(AMADEUS_API_SECRET)%'
    openrouter.api_key: '%env(OPENROUTER_API_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Service\AmadeusService:
        arguments:
            $amadeusApiKey: '%amadeus.api.key%'
            $amadeusApiSecret: '%amadeus.api.secret%'
    App\Service\WeatherService:
        arguments:
            $weatherApiKey: '%env(WEATHERSTACK_API_KEY)%'
        autowire: true
        autoconfigure: true
    App\Service\OpenAiService:
        arguments:
            $apiKey: '%env(OPENAI_API_KEY)%'
    App\Service\BarCodeGenerator:
        arguments:
            $router: '@router'

    App\Service\OpenRouterService:
        arguments:
            $apiKey: '%openrouter.api_key%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\hebergements\FileUploader:
        arguments:
            $targetDirectory: '%chambre_images_directory%'

    # Ajoutez explicitement le service de login success handler
    App\Security\LoginSuccessHandler:
        arguments:
            $urlGenerator: '@router'
            $tokenStorage: '@security.token_storage'

    App\Service\utilisateurs\LoginHistoryLogger:
        arguments:
            $requestStack: '@request_stack'
            $params: '@parameter_bag'
            $serializer: '@serializer'

    App\EventListener\LoginListener:
        arguments:
            $loginLogger: '@App\Service\utilisateurs\LoginHistoryLogger'
        tags:
            - { name: kernel.event_subscriber }


